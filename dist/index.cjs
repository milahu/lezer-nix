'use strict';

var lr = require('@lezer/lr');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const StringContent = 1,
  stringInterpolationStart = 76,
  stringEnd = 77,
  IndentedStringContent = 2,
  indentedStringInterpolationStart = 78,
  indentedStringEnd = 79;

/* Hand-written tokenizers for Nix tokens that can't be
   expressed by lezer's built-in tokenizer. */


const braceL = 123, dollar = 36, backslash = 92,
  doublequote = 34, singlequote = 39, newline = 10;

// based on javascript template parser
// https://github.com/lezer-parser/javascript/blob/main/src/tokens.js
const indentedString = new lr.ExternalTokenizer(input => {
  for (let afterDollar = false, i = 0;; i++) {
    let {next} = input;
    if (next < 0) { // next == -1: end of file
      if (i) {
        input.acceptToken(IndentedStringContent);
      }
      break
    } else if (next == singlequote) {
      if (input.peek(1) == singlequote) {
        if (i == 0) {
          // end of string
          input.advance(2);
          input.acceptToken(indentedStringEnd);
          break
        }
        if (input.peek(2) == dollar && input.peek(3) == braceL) {
          input.advance(2);
        }
        else {
          input.acceptToken(IndentedStringContent);
          // do not advance. '' is needed for indentedStringEnd token
          break
        }
      }
    } else if (next == braceL && afterDollar) {
      if (i == 1) {
        input.acceptToken(indentedStringInterpolationStart, 1);
      }
      else {
        input.acceptToken(IndentedStringContent, -1);
      }
      break
    } else if (next == newline && i > 0) {
      // Break up indentedString strings on lines, to avoid huge tokens
      input.advance(); // add newline to current token
      input.acceptToken(IndentedStringContent);
      break
    }
    afterDollar = next == dollar;
    input.advance();
  }
});

// based on javascript template parser
// https://github.com/lezer-parser/javascript/blob/main/src/tokens.js
const string = new lr.ExternalTokenizer(input => {
  for (let afterDollar = false, i = 0;; i++) {
    let {next} = input;
    if (next < 0) {
      if (i) input.acceptToken(StringContent);
      break
    } else if (next == doublequote) {
      if (i) input.acceptToken(StringContent);
      else input.acceptToken(stringEnd, 1);
      break
    } else if (next == braceL && afterDollar) {
      if (i == 1) input.acceptToken(stringInterpolationStart, 1);
      else input.acceptToken(StringContent, -1);
      break
    } else if (next == newline && i) {
      // Break up template strings on lines, to avoid huge tokens
      input.advance();
      input.acceptToken(StringContent);
      break
    } else if (next == backslash) {
      input.advance();
    }
    afterDollar = next == dollar;
    input.advance();
  }
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Identifier = {__proto__:null,assert:182, with:186, let:188, inherit:208, in:216, if:220, then:222, else:224, __curPos:268, __typeOf:272, __isFunction:274, __isInt:276, __isFloat:278, __isString:280, __isBool:282, __isPath:284, __genericClosure:286, __addErrorContext:288, __ceil:290, __floor:292, __tryEval:294, __getEnv:296, __seq:298, __deepSeq:300, __trace:302, __toPath:304, __storePath:306, __pathExists:308, __readFile:310, __findFile:312, __hashFile:314, __readDir:316, __toXML:318, __toJSON:320, __fromJSON:322, __toFile:324, __filterSource:326, __path:328, __attrNames:330, __attrValues:332, __getAttr:334, __unsafeGetAttrPos:336, __hasAttr:338, __isAttrs:340, __listToAttrs:342, __intersectAttrs:344, __catAttrs:346, __functionArgs:348, __mapAttrs:350, __zipAttrsWith:352, __isList:354, __elemAt:356, __head:358, __tail:360, __filter:362, __elem:364, __concatLists:366, __length:368, "__foldl'":370, __any:372, __all:374, __genList:376, __sort:378, __partition:380, __groupBy:382, __concatMap:384, __add:386, __sub:388, __mul:390, __div:392, __bitAnd:394, __bitOr:396, __bitXor:398, __lessThan:400, __substring:402, __stringLength:404, __hashString:406, __match:408, __split:410, __concatStringsSep:412, __replaceStrings:414, __parseDrvName:416, __compareVersions:418, __splitVersion:420, __traceVerbose:422, true:428, false:430, null:432, rec:440, or:446};
const parser = lr.LRParser.deserialize({
  version: 14,
  states: "LWQ]QSOOO/UQWO'#DaO/rOPO'#EbO/}QSO'#CvO/}QSO'#CwO7aQWO'#EmOOQO'#FS'#FSOOQO'#Db'#DbOOQO'#Dc'#DcOOQO'#Dd'#DdO7wOQO'#G}OOQO'#Di'#DiOOQO'#Dk'#DkO]QSO'#DmO>[QSO'#DpOOQO'#FV'#FVOOQO'#FU'#FUOEmQWO'#FUOFWQWO'#EqOOQO'#FT'#FTOOQO'#Eq'#EqOOQO'#Em'#EmOOQO'#EQ'#EQQOQSOOOGpQ`O'#DoOOQO'#D`'#D`OOQO'#FX'#FXOOQO'#De'#DeOOQO'#Df'#DfOOQO'#Dg'#DgO]QSO'#CkO]QSO'#ClOH[QSO'#CmO]QSO'#CuOOQO'#Dh'#DhOHpQSO'#DnO]QSO,58|OHuQSO,59UO]QSO'#CpOOOP'#Dt'#DtOHzOPO,5:|OOQO,5:|,5:|OIwQWO,59bOOQO'#Da'#DaOJqQSO'#DoOOQO,59c,59cO/}QSO,59dO/}QSO,59eO/}QSO,59fO/}QSO,59gO/}QSO,59hO/}QSO,59iO/}QSO,59jO/}QSO,59kO/}QSO,59lO/}QSO,59mO/}QSO,59oO/}QSO,59pO/}QSO,59qO/}QSO,59rO/}QSO,59sOKSQSO,59nOK_QSO'#DjOOOQ'#Dw'#DwO!#yOQO,5=iOOQO,5=i,5=iO!$UQSO,5:XOOQO,5:[,5:[O!$ZQSO,5:[O!*jQSO'#FUOKSQSO,59yOOQO,59x,59xO!*tQSO'#CfOOQO'#ET'#ETO!+VQ`O'#DrO!+_QSO'#CeOOQO'#Ch'#ChO!+_QSO'#CeOOQO'#Ce'#CeO!+gQSO'#CqOOQO'#Ea'#EaO!8dQSO'#E`OOQO'#Ds'#DsO!8qQSO'#E_O!9VQSO,59OO!9[QSO'#CnO!9aQSO,5:ZOOQO'#Co'#CoO!9fQSO'#CrO!9wQSO,59VO!9|QSO,59WO!:RQSO,59XOJqQSO,59`O!:WQSO,59aOJqQSO,5:YOOQO1G.h1G.hO!:]Q`O1G.pO!:kQWO,59[OOOP-E7r-E7rOOQO1G0h1G0hO!;eQWO1G/OO!<[QWO1G/PO!=pQWO1G/QO!?[QWO1G/RO!@vQWO1G/SO!BbQWO1G/TO!C_QWO1G/UO!DUQWO1G/VO!D{QWO1G/WO!FQQWO1G/XO!GrQWO1G/ZOOQO1G/[1G/[O!IdQWO1G/]O!KOQWO1G/^O!LjQWO1G/_O!MZQWO'#E`OOQO1G/Y1G/YO!NpQpO'#DaO#!RQpO'#EmO#!YQpO,5:UO#!_QpO'#FUO#!iQpO'#EqOOOQ-E7u-E7uOOQO1G3T1G3TOOQO1G/s1G/sOOQO'#Dx'#DxO##rQSO1G/vOOQO1G/v1G/vO#+TQWO1G/eO!+gQSO,59RO#+nQSO'#DuO#2[QSO,5:zO#2iQSO'#CfOOQO,5:^,5:^OOQO,59P,59PO!+VQ`O,59POOQO-E7p-E7pO#2tQSO,59PO#2|Q!bO'#DaO#3^QSO,59]O#4gQ`O'#EmO#4qQ!bO'#FUO#5OQ!bO'#EqOOQO-E7q-E7qO#6[QSO1G.jO]QSO,59YOOQO1G/u1G/uO#6dQSO'#EiOOQO'#Dv'#DvO#6rQSO,59^O]QSO,59_O]QSO1G.qO]QSO1G.rO]QSO1G.sO#6wQSO1G.zO]QSO1G.{O#6|QSO1G/tO#7RQSO7+$[OOOP1G.v1G.vO#7WQWO,5:zO#8mQpO,59bOOOQ1G/p1G/pOOQO-E7v-E7vOOQO7+%b7+%bO#?`QSO1G/eO8SQSO7+%cOOQO1G.m1G.mOOQO,5:a,5:aOOQO-E7s-E7sOOQO1G.k1G.kP#?jQSO'#DrO!+VQ`O1G.kOOQO1G.w1G.wO#?oQ`O,59bO]QSO7+$UO#@]QSO7+$ZO#@bQSO1G.tOOQO-E7t-E7tOOQO1G.x1G.xO#@gQSO1G.yOOQO7+$]7+$]OOQO7+$^7+$^OOQO7+$_7+$_OOQO7+$f7+$fO#@lQSO7+$gOOQO7+%`7+%`O#@qQSO<<GvO#AkQpO1G/OO#BRQpO1G/PO#BiQpO1G/QO#CVQpO1G/RO#CsQpO1G/SO#DaQpO1G/TO#D}QpO1G/UO#EeQpO1G/VO#E{QpO1G/WO#FSQpO1G/XO#FpQpO1G/ZO#GWQpO1G/]O#GhQpO1G/^O#GxQpO1G/_O$ jQpO'#E`O$ qQpO1G/eOOQO<<H}<<H}OOQO7+$V7+$VO$!pQ`O1G/OO$#ZQ`O1G/PO$#tQ`O1G/QO$$eQ`O1G/RO$%UQ`O1G/SO$%uQ`O1G/TO$&fQ`O1G/UO$'PQ`O1G/VO$'jQ`O1G/WO$'tQ`O1G/XO$(eQ`O1G/ZO$)OQ`O1G/]O$)cQ`O1G/^O$)vQ`O1G/_O$*ZQ!bO'#E`O$*eQ!bO1G/eOOQO<<Gp<<GpO$*rQSO<<GuOOQO7+$`7+$`O$*wQSO7+$eO]QSO<<HRO]QSOAN=bO$2gQpO,5:zO$2nQ!bO,5:zO]QSOAN=aO$2xQSO<<HPOOQOAN=mAN=mOOQOG22|G22|OOQOG22{G22{OOQOAN=kAN=kO$2}QSO'#CvO$3XQSO'#CvO$2}QSO'#CwO$3XQSO'#CwOK_QSO,58|O!+gQSO,58|O$2}QSO,59dO$3XQSO,59dO$2}QSO,59eO$3XQSO,59eO$2}QSO,59fO$3XQSO,59fO$2}QSO,59gO$3XQSO,59gO$2}QSO,59hO$3XQSO,59hO$2}QSO,59iO$3XQSO,59iO$2}QSO,59jO$3XQSO,59jO$2}QSO,59kO$3XQSO,59kO$2}QSO,59lO$3XQSO,59lO$2}QSO,59mO$3XQSO,59mO$2}QSO,59oO$3XQSO,59oO$2}QSO,59pO$3XQSO,59pO$2}QSO,59qO$3XQSO,59qO$2}QSO,59rO$3XQSO,59rO$2}QSO,59sO$3XQSO,59sO$3cQSO,59nO$3nQSO,59nO$3yQSO,59yO$3cQSO,59yO$3nQSO,59yOK_QSO1G.qO!+gQSO1G.qOK_QSO1G.rO!+gQSO1G.rOK_QSO1G.sO!+gQSO1G.sO8SQSO7+%cO8SQSO7+%cO8SQSO7+%cOK_QSO7+$UO!+gQSO7+$UOK_QSO<<HRO!+gQSO<<HROK_QSOAN=bO!+gQSOAN=bOK_QSOAN=aO!+gQSOAN=aO$4UQSO,59VO$4ZQSO,59VO$4`QSO,59WO$4eQSO,59WO$4jQSO,59XO$4oQSO,59XO$4tQSO1G.jO$4|QSO1G.jO$5UQSO7+$gO$5ZQSO7+$gO$5`QSO<<GvO$5eQSO<<GvO$5jQSO<<GuO$5oQSO<<GuO]QSO'#CkO]QSO'#CkO]QSO'#ClO]QSO'#ClOH[QSO'#CmOH[QSO'#CmO$5tQSO,59OO$5yQSO,59OO]QSO1G.{O]QSO1G.{O$6OQSO7+$[O$6TQSO7+$[O$6YQSO7+$ZO$6_QSO7+$ZOGpQ`O'#DoOGpQ`O'#DoO$6dQSO,59aO$6iQSO,59aO!:]Q`O1G.pO!:]Q`O1G.pO]QSO'#CuO]QSO'#CuO$6nQSO,59UO$6sQSO,59U",
  stateData: "$7X~O!sOSROSSOS~OVPO|UO}UO!OUO!PUO!`[O!vhO!}nO#PoO#QpO#VQO#^]O#bqO#fRO#gSO#ziO#|jO#}jO$OjO$PjO$QjO$RjO$SjO$TjO$UjO$VjO$WjO$XjO$YjO$ZjO$[jO$]jO$^jO$_jO$`jO$ajO$bjO$cjO$djO$ejO$fjO$gjO$hjO$ijO$jjO$kjO$ljO$mjO$njO$ojO$pjO$qjO$rjO$sjO$tjO$ujO$vjO$wjO$xjO$yjO$zjO${jO$|jO$}jO%OjO%PjO%QjO%RjO%SjO%TjO%UjO%VjO%WjO%XjO%YjO%ZjO%[jO%]jO%^jO%_jO%`jO%ajO%bjO%cjO%djO%ejO%fjO%gjO%hjO%ijO%jjO%kjO%lWO%mXO%nkO%olO%pmO%rYO%tsO%u^O~OV!TX|!TX}!TX!O!TX!P!TX!`!TX!v!TX!x!TX#V!TX#Y!TX#^!TX#g!TX#h!TX#i!TX#j!TX#k!TX#l!TX#m!TX#n!TX#o!TX#p!TX#q!TX#r!TX#s!TX#t!TX#u!TX#z!TX#|!TX#}!TX$O!TX$P!TX$Q!TX$R!TX$S!TX$T!TX$U!TX$V!TX$W!TX$X!TX$Y!TX$Z!TX$[!TX$]!TX$^!TX$_!TX$`!TX$a!TX$b!TX$c!TX$d!TX$e!TX$f!TX$g!TX$h!TX$i!TX$j!TX$k!TX$l!TX$m!TX$n!TX$o!TX$p!TX$q!TX$r!TX$s!TX$t!TX$u!TX$v!TX$w!TX$x!TX$y!TX$z!TX${!TX$|!TX$}!TX%O!TX%P!TX%Q!TX%R!TX%S!TX%T!TX%U!TX%V!TX%W!TX%X!TX%Y!TX%Z!TX%[!TX%]!TX%^!TX%_!TX%`!TX%a!TX%b!TX%c!TX%d!TX%e!TX%f!TX%g!TX%h!TX%i!TX%j!TX%k!TX%l!TX%m!TX%n!TX%o!TX%p!TX%r!TX%t!TX%u!TX~O!utO!|uO!m!TX#_!TX#O!TX#c!TX#W!TX#d!TX~P'wOPwO!nvO!oyO~OV{O|UO}UO!OUO!PUO!`[O!v|O#VQO#^]O#fRO#gSO#ziO#|jO#}jO$OjO$PjO$QjO$RjO$SjO$TjO$UjO$VjO$WjO$XjO$YjO$ZjO$[jO$]jO$^jO$_jO$`jO$ajO$bjO$cjO$djO$ejO$fjO$gjO$hjO$ijO$jjO$kjO$ljO$mjO$njO$ojO$pjO$qjO$rjO$sjO$tjO$ujO$vjO$wjO$xjO$yjO$zjO${jO$|jO$}jO%OjO%PjO%QjO%RjO%SjO%TjO%UjO%VjO%WjO%XjO%YjO%ZjO%[jO%]jO%^jO%_jO%`jO%ajO%bjO%cjO%djO%ejO%fjO%gjO%hjO%ijO%jjO%kjO%lWO%mXO%nkO%olO%pmO%rYO%tsO%u^O~O!x!_O#g!ZO#h!OO#i!PO#j!QO#k!RO#l!SO#m!TO#n!UO#o!VO#p!WO#q!XO#r!YO#s![O#t!]O#u!^O~O!m#aX#_#aX#O#aX#c#aX#W#aX#d#aX~P6]OQ!aO!p!`O!q!cO~OV{O|UO}UO!OUO!PUO!`[O!v|O#VQO#^]O#ziO#|jO#}jO$OjO$PjO$QjO$RjO$SjO$TjO$UjO$VjO$WjO$XjO$YjO$ZjO$[jO$]jO$^jO$_jO$`jO$ajO$bjO$cjO$djO$ejO$fjO$gjO$hjO$ijO$jjO$kjO$ljO$mjO$njO$ojO$pjO$qjO$rjO$sjO$tjO$ujO$vjO$wjO$xjO$yjO$zjO${jO$|jO$}jO%OjO%PjO%QjO%RjO%SjO%TjO%UjO%VjO%WjO%XjO%YjO%ZjO%[jO%]jO%^jO%_jO%`jO%ajO%bjO%cjO%djO%ejO%fjO%gjO%hjO%ijO%jjO%kjO%lWO%mXO%nkO%olO%pmO%rYO%tsO%u^O~O%v!eO~P8SOV#xX|#xX}#xX!O#xX!P#xX!`#xX!v#xX!x#xX#V#xX#^#xX#g#xX#h#xX#i#xX#j#xX#k#xX#l#xX#m#xX#n#xX#o#xX#p#xX#q#xX#r#xX#s#xX#t#xX#u#xX#z#xX#|#xX#}#xX$O#xX$P#xX$Q#xX$R#xX$S#xX$T#xX$U#xX$V#xX$W#xX$X#xX$Y#xX$Z#xX$[#xX$]#xX$^#xX$_#xX$`#xX$a#xX$b#xX$c#xX$d#xX$e#xX$f#xX$g#xX$h#xX$i#xX$j#xX$k#xX$l#xX$m#xX$n#xX$o#xX$p#xX$q#xX$r#xX$s#xX$t#xX$u#xX$v#xX$w#xX$x#xX$y#xX$z#xX${#xX$|#xX$}#xX%O#xX%P#xX%Q#xX%R#xX%S#xX%T#xX%U#xX%V#xX%W#xX%X#xX%Y#xX%Z#xX%[#xX%]#xX%^#xX%_#xX%`#xX%a#xX%b#xX%c#xX%d#xX%e#xX%f#xX%g#xX%h#xX%i#xX%j#xX%k#xX%l#xX%m#xX%n#xX%o#xX%p#xX%r#xX%t#xX%u#xX~O#Y!hO!m#xX#_#xX#O#xX#c#xX#W#xX#d#xX~P>cO!m#eX!x#eX#g#eX#h#eX#i#eX#j#eX#k#eX#l#eX#m#eX#n#eX#o#eX#p#eX#q#eX#r#eX#s#eX#t#eX#u#eX#_#eX#O#eX#c#eX#W#eX#d#eX~P8SOV!jO!y!lO!z!nO#VQO#X!qO#[!zO!{XP!{#RP~OV!sO!v#OO#VQO#X!qO#[!zO#`#RP~O!v#QO~O!v#SO~OPwO!nvO!o#VO~O#hja#ija#jja#kja#lja#mja#nja#oja#pja#qja~O!x!_O#g!ZO#r!YO#s![O#t!]O#u!^O!mja#_ja#Oja#cja#Wja#dja~PIVOV!sO#VQO#X!qO#[!zO!{#RP~OV#gO#VQO#X!qO~OV#iO|UO}UO!OUO!PUO!`[O!v'}O!}'oO#P'qO#Q'sO#VQO#^]O#b(TO#f&TO#g&VO#ziO#|jO#}jO$OjO$PjO$QjO$RjO$SjO$TjO$UjO$VjO$WjO$XjO$YjO$ZjO$[jO$]jO$^jO$_jO$`jO$ajO$bjO$cjO$djO$ejO$fjO$gjO$hjO$ijO$jjO$kjO$ljO$mjO$njO$ojO$pjO$qjO$rjO$sjO$tjO$ujO$vjO$wjO$xjO$yjO$zjO${jO$|jO$}jO%OjO%PjO%QjO%RjO%SjO%TjO%UjO%VjO%WjO%XjO%YjO%ZjO%[jO%]jO%^jO%_jO%`jO%ajO%bjO%cjO%djO%ejO%fjO%gjO%hjO%ijO%jjO%kjO%lWO%mXO%nkO%olO%pmO%rYO%tsO%u^O~OQ!aO!p!`O!q#oO~O#_#pO~O%v#sO~P8SOV#xX|#xX}#xX!O#xX!P#xX!`#xX!v#xX#V#xX#^#xX#z#xX#|#xX#}#xX$O#xX$P#xX$Q#xX$R#xX$S#xX$T#xX$U#xX$V#xX$W#xX$X#xX$Y#xX$Z#xX$[#xX$]#xX$^#xX$_#xX$`#xX$a#xX$b#xX$c#xX$d#xX$e#xX$f#xX$g#xX$h#xX$i#xX$j#xX$k#xX$l#xX$m#xX$n#xX$o#xX$p#xX$q#xX$r#xX$s#xX$t#xX$u#xX$v#xX$w#xX$x#xX$y#xX$z#xX${#xX$|#xX$}#xX%O#xX%P#xX%Q#xX%R#xX%S#xX%T#xX%U#xX%V#xX%W#xX%X#xX%Y#xX%Z#xX%[#xX%]#xX%^#xX%_#xX%`#xX%a#xX%b#xX%c#xX%d#xX%e#xX%f#xX%g#xX%h#xX%i#xX%j#xX%k#xX%l#xX%m#xX%n#xX%o#xX%p#xX%r#xX%t#xX%u#xX~O#Y&{O%v#xX~P!$bO!x#uO#Y#vO!yYX!{YX#Z#SX~OV#xO!z!nO~O!y#{O!{XX~OV$OO|UO}UO!OUO!PUO!`[O!v(OO!}'pO#P'rO#Q'tO#VQO#^]O#b(UO#f&UO#g&WO#ziO#|jO#}jO$OjO$PjO$QjO$RjO$SjO$TjO$UjO$VjO$WjO$XjO$YjO$ZjO$[jO$]jO$^jO$_jO$`jO$ajO$bjO$cjO$djO$ejO$fjO$gjO$hjO$ijO$jjO$kjO$ljO$mjO$njO$ojO$pjO$qjO$rjO$sjO$tjO$ujO$vjO$wjO$xjO$yjO$zjO${jO$|jO$}jO%OjO%PjO%QjO%RjO%SjO%TjO%UjO%VjO%WjO%XjO%YjO%ZjO%[jO%]jO%^jO%_jO%`jO%ajO%bjO%cjO%djO%ejO%fjO%gjO%hjO%ijO%jjO%kjO%lWO%mXO%nkO%olO%pmO%rYO%tsO%u^O~O#Y#vOV#SX#O#SX#V#SX|#SX}#SX!O#SX!P#SX!`#SX!v#SX#^#SX#z#SX#|#SX#}#SX$O#SX$P#SX$Q#SX$R#SX$S#SX$T#SX$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$]#SX$^#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX$f#SX$g#SX$h#SX$i#SX$j#SX$k#SX$l#SX$m#SX$n#SX$o#SX$p#SX$q#SX$r#SX$s#SX$t#SX$u#SX$v#SX$w#SX$x#SX$y#SX$z#SX${#SX$|#SX$}#SX%O#SX%P#SX%Q#SX%R#SX%S#SX%T#SX%U#SX%V#SX%W#SX%X#SX%Y#SX%Z#SX%[#SX%]#SX%^#SX%_#SX%`#SX%a#SX%b#SX%c#SX%d#SX%e#SX%f#SX%g#SX%h#SX%i#SX%j#SX%k#SX%l#SX%m#SX%n#SX%o#SX%p#SX%r#SX%t#SX%u#SX%w#SX~O#Z#SX#X#SX%v#SX~P!2ROV!sO#VQO#X!qO#[!zO!{#RX#`#RX~O!{$UO~O#Z$VO~O!{$WO~OV!sO#VQO#X!qO#^$[O#O#]P~O#O$]O~O#O$^O~O#`$_O~O#c$aO~OV#xO!y!lO!z!nO!{XP~O#W$dO~O!x!_O#g!ZO#j!QO#k!RO#l!SO#m!TO#q!XO#r!YO#s![O#t!]O#u!^O~O!mli#hli#ili#nli#oli#pli#_li#Oli#cli#Wli#dli~P!:pO!mmi#hmi#imi#nmi#omi#pmi#_mi#Omi#cmi#Wmi#dmi~P!:pO#hni#ini#jni#kni#lni#mni#nni#oni#pni~O!x!_O#g!ZO#q!XO#r!YO#s![O#t!]O#u!^O!mni#_ni#Oni#cni#Wni#dni~P!=RO#hoi#ioi#joi#koi#loi#moi#noi#ooi#poi~O!x!_O#g!ZO#q!XO#r!YO#s![O#t!]O#u!^O!moi#_oi#Ooi#coi#Woi#doi~P!>mO#hpi#ipi#jpi#kpi#lpi#mpi#npi#opi#ppi~O!x!_O#g!ZO#q!XO#r!YO#s![O#t!]O#u!^O!mpi#_pi#Opi#cpi#Wpi#dpi~P!@XO#hqi#iqi#jqi#kqi#lqi#mqi#nqi#oqi#pqi~O!x!_O#g!ZO#q!XO#r!YO#s![O#t!]O#u!^O!mqi#_qi#Oqi#cqi#Wqi#dqi~P!AsO#h!OO#i!PO!mri#nri#ori#pri#_ri#Ori#cri#Wri#dri~P!:pO#h!OO#i!PO#n!UO!msi#osi#psi#_si#Osi#csi#Wsi#dsi~P!:pO!mti#_ti#Oti#cti#Wti#dti~P6]O#hui#iui#jui#kui#lui#mui#nui#oui#pui~O!x!_O#g!ZO#q!XO#r!YO#s![O#t!]O#u!^O!mui#_ui#Oui#cui#Wui#dui~P!EcO#hwi#iwi#jwi#kwi#lwi#mwi#nwi#owi#pwi#qwi#rwi~O!x!_O#g!ZO#s![O#t!]O#u!^O!mwi#_wi#Owi#cwi#Wwi#dwi~P!F}O#hyi#iyi#jyi#kyi#lyi#myi#nyi#oyi#pyi#qyi#ryi#syi#tyi~O!x!_O#g!ZO#u!^O!myi#_yi#Oyi#cyi#Wyi#dyi~P!HiO#hzi#izi#jzi#kzi#lzi#mzi#nzi#ozi#pzi#qzi#rzi#szi#tzi~O!x!_O#g!ZO#u!^O!mzi#_zi#Ozi#czi#Wzi#dzi~P!JTO#h{i#i{i#j{i#k{i#l{i#m{i#n{i#o{i#p{i#q{i#r{i#s{i#t{i~O!x!_O#g!ZO#u!^O!m{i#_{i#O{i#c{i#W{i#d{i~P!KoO!m#SX!x#SX#g#SX#h#SX#i#SX#j#SX#k#SX#l#SX#m#SX#n#SX#o#SX#p#SX#q#SX#r#SX#s#SX#t#SX#u#SX#_#SX#c#SX#W#SX#d#SX~P!2RO!u&XO!|(VO%s!TX~P'wO!x&yO#g&qO#h&ZO#i&]O#j&_O#k&aO#l&cO#m&eO#n&gO#o&iO#p&kO#q&mO#r&oO#s&sO#t&uO#u&wO~O%s#aX~P!N}O%s$gO~O#Y&|O%s#xX~P>cO!x#eX#g#eX#h#eX#i#eX#j#eX#k#eX#l#eX#m#eX#n#eX#o#eX#p#eX#q#eX#r#eX#s#eX#t#eX#u#eX%s#eX~P8SO%v$iO~P8SOV!Ri|!Ri}!Ri!O!Ri!P!Ri!`!Ri!v!Ri!x!Ri#V!Ri#^!Ri#g!Ri#h!Ri#i!Ri#j!Ri#k!Ri#l!Ri#m!Ri#n!Ri#o!Ri#p!Ri#q!Ri#r!Ri#s!Ri#t!Ri#u!Ri#z!Ri#|!Ri#}!Ri$O!Ri$P!Ri$Q!Ri$R!Ri$S!Ri$T!Ri$U!Ri$V!Ri$W!Ri$X!Ri$Y!Ri$Z!Ri$[!Ri$]!Ri$^!Ri$_!Ri$`!Ri$a!Ri$b!Ri$c!Ri$d!Ri$e!Ri$f!Ri$g!Ri$h!Ri$i!Ri$j!Ri$k!Ri$l!Ri$m!Ri$n!Ri$o!Ri$p!Ri$q!Ri$r!Ri$s!Ri$t!Ri$u!Ri$v!Ri$w!Ri$x!Ri$y!Ri$z!Ri${!Ri$|!Ri$}!Ri%O!Ri%P!Ri%Q!Ri%R!Ri%S!Ri%T!Ri%U!Ri%V!Ri%W!Ri%X!Ri%Y!Ri%Z!Ri%[!Ri%]!Ri%^!Ri%_!Ri%`!Ri%a!Ri%b!Ri%c!Ri%d!Ri%e!Ri%f!Ri%g!Ri%h!Ri%i!Ri%j!Ri%k!Ri%l!Ri%m!Ri%n!Ri%o!Ri%p!Ri%r!Ri%t!Ri%u!Ri~O%w$kO!m!Ri#_!Ri#O!Ri#c!Ri#W!Ri#d!Ri~P##yOV$mO#VQO#X!qO~O#Y#vOV#Sa#O#Sa#V#Sa|#Sa}#Sa!O#Sa!P#Sa!`#Sa!v#Sa#^#Sa#z#Sa#|#Sa#}#Sa$O#Sa$P#Sa$Q#Sa$R#Sa$S#Sa$T#Sa$U#Sa$V#Sa$W#Sa$X#Sa$Y#Sa$Z#Sa$[#Sa$]#Sa$^#Sa$_#Sa$`#Sa$a#Sa$b#Sa$c#Sa$d#Sa$e#Sa$f#Sa$g#Sa$h#Sa$i#Sa$j#Sa$k#Sa$l#Sa$m#Sa$n#Sa$o#Sa$p#Sa$q#Sa$r#Sa$s#Sa$t#Sa$u#Sa$v#Sa$w#Sa$x#Sa$y#Sa$z#Sa${#Sa$|#Sa$}#Sa%O#Sa%P#Sa%Q#Sa%R#Sa%S#Sa%T#Sa%U#Sa%V#Sa%W#Sa%X#Sa%Y#Sa%Z#Sa%[#Sa%]#Sa%^#Sa%_#Sa%`#Sa%a#Sa%b#Sa%c#Sa%d#Sa%e#Sa%f#Sa%g#Sa%h#Sa%i#Sa%j#Sa%k#Sa%l#Sa%m#Sa%n#Sa%o#Sa%p#Sa%r#Sa%t#Sa%u#Sa%w#Sa~O#Z#Sa#X#Sa%v#Sa~P#+yO!x#uO!yYX!{YX~O!y$qO!{Xa~O!u&YO!|(WO!{!TX!y!TX~P'wO!{$rO~O!x&zO#g&rO#h&[O#i&^O#j&`O#k&bO#l&dO#m&fO#n&hO#o&jO#p&lO#q&nO#r&pO#s&tO#t&vO#u&xO~O!{#aX!y#aX~P#3cO#Y&}O!{#xX!y#xX~P>cO!x#eX!{#eX#g#eX#h#eX#i#eX#j#eX#k#eX#l#eX#m#eX#n#eX#o#eX#p#eX#q#eX#r#eX#s#eX#t#eX#u#eX!y#eX~P8SO!u$tO!|$uO~OV!sO#VQO#X!qO#O#]X~O#O$xO~O!{$}O~O!{%PO~O!{%QO~O!m#Sa!x#Sa#g#Sa#h#Sa#i#Sa#j#Sa#k#Sa#l#Sa#m#Sa#n#Sa#o#Sa#p#Sa#q#Sa#r#Sa#s#Sa#t#Sa#u#Sa#_#Sa#c#Sa#W#Sa#d#Sa~P#+yO!x&yO#g&qO#r&oO#s&sO#t&uO#u&wO%sja~PIVOV!Ri|!Ri}!Ri!O!Ri!P!Ri!`!Ri!v!Ri#V!Ri#^!Ri#z!Ri#|!Ri#}!Ri$O!Ri$P!Ri$Q!Ri$R!Ri$S!Ri$T!Ri$U!Ri$V!Ri$W!Ri$X!Ri$Y!Ri$Z!Ri$[!Ri$]!Ri$^!Ri$_!Ri$`!Ri$a!Ri$b!Ri$c!Ri$d!Ri$e!Ri$f!Ri$g!Ri$h!Ri$i!Ri$j!Ri$k!Ri$l!Ri$m!Ri$n!Ri$o!Ri$p!Ri$q!Ri$r!Ri$s!Ri$t!Ri$u!Ri$v!Ri$w!Ri$x!Ri$y!Ri$z!Ri${!Ri$|!Ri$}!Ri%O!Ri%P!Ri%Q!Ri%R!Ri%S!Ri%T!Ri%U!Ri%V!Ri%W!Ri%X!Ri%Y!Ri%Z!Ri%[!Ri%]!Ri%^!Ri%_!Ri%`!Ri%a!Ri%b!Ri%c!Ri%d!Ri%e!Ri%f!Ri%g!Ri%h!Ri%i!Ri%j!Ri%k!Ri%l!Ri%m!Ri%n!Ri%o!Ri%p!Ri%r!Ri%t!Ri%u!Ri~O%w'UO%v!Ri~P#9WOV#xO~O!x&zO#g&rO#r&pO#s&tO#t&vO#u&xO!{ja!yja~PIVOV%vO~O#O%wO~O#_%xO~O#d%yO~O!u%zO~O!x&yO#g&qO#j&_O#k&aO#l&cO#m&eO#q&mO#r&oO#s&sO#t&uO#u&wO~O#hli#ili#nli#oli#pli%sli~P#@vO#hmi#imi#nmi#omi#pmi%smi~P#@vO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO%sni~P!=RO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO%soi~P!>mO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO%spi~P!@XO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO%sqi~P!AsO#h&ZO#i&]O#nri#ori#pri%sri~P#@vO#h&ZO#i&]O#n&gO#osi#psi%ssi~P#@vO%sti~P!N}O!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO%sui~P!EcO!x&yO#g&qO#s&sO#t&uO#u&wO%swi~P!F}O!x&yO#g&qO#u&wO%syi~P!HiO!x&yO#g&qO#u&wO%szi~P!JTO!x&yO#g&qO#u&wO%s{i~P!KoO#Y#vO!x#SX#g#SX#h#SX#i#SX#j#SX#k#SX#l#SX#m#SX#n#SX#o#SX#p#SX#q#SX#r#SX#s#SX#t#SX#u#SXV#SX|#SX}#SX!O#SX!P#SX!`#SX!v#SX#V#SX#^#SX#z#SX#|#SX#}#SX$O#SX$P#SX$Q#SX$R#SX$S#SX$T#SX$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$]#SX$^#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX$f#SX$g#SX$h#SX$i#SX$j#SX$k#SX$l#SX$m#SX$n#SX$o#SX$p#SX$q#SX$r#SX$s#SX$t#SX$u#SX$v#SX$w#SX$x#SX$y#SX$z#SX${#SX$|#SX$}#SX%O#SX%P#SX%Q#SX%R#SX%S#SX%T#SX%U#SX%V#SX%W#SX%X#SX%Y#SX%Z#SX%[#SX%]#SX%^#SX%_#SX%`#SX%a#SX%b#SX%c#SX%d#SX%e#SX%f#SX%g#SX%h#SX%i#SX%j#SX%k#SX%l#SX%m#SX%n#SX%o#SX%p#SX%r#SX%t#SX%u#SX%w#SX~O%s#SX~P#HYO%w'VO%s!Ri~P##yO!x&zO#g&rO#j&`O#k&bO#l&dO#m&fO#q&nO#r&pO#s&tO#t&vO#u&xO~O!{li#hli#ili#nli#oli#pli!yli~P$ {O!{mi#hmi#imi#nmi#omi#pmi!ymi~P$ {O!x&zO#g&rO#q&nO#r&pO#s&tO#t&vO#u&xO!{ni!yni~P!=RO!x&zO#g&rO#q&nO#r&pO#s&tO#t&vO#u&xO!{oi!yoi~P!>mO!x&zO#g&rO#q&nO#r&pO#s&tO#t&vO#u&xO!{pi!ypi~P!@XO!x&zO#g&rO#q&nO#r&pO#s&tO#t&vO#u&xO!{qi!yqi~P!AsO#h&[O#i&^O!{ri#nri#ori#pri!yri~P$ {O#h&[O#i&^O#n&hO!{si#osi#psi!ysi~P$ {O!{ti!yti~P#3cO!x&zO#g&rO#q&nO#r&pO#s&tO#t&vO#u&xO!{ui!yui~P!EcO!x&zO#g&rO#s&tO#t&vO#u&xO!{wi!ywi~P!F}O!x&zO#g&rO#u&xO!{yi!yyi~P!HiO!x&zO#g&rO#u&xO!{zi!yzi~P!JTO!x&zO#g&rO#u&xO!{{i!y{i~P!KoO!{#SX!y#SX~P#HYO%w'WO!{!Ri!y!Ri~P##yO!u%}O~OV!sO#VQO#X!qO#O#]P~O#Y#vO!x#Sa#g#Sa#h#Sa#i#Sa#j#Sa#k#Sa#l#Sa#m#Sa#n#Sa#o#Sa#p#Sa#q#Sa#r#Sa#s#Sa#t#Sa#u#SaV#Sa|#Sa}#Sa!O#Sa!P#Sa!`#Sa!v#Sa#V#Sa#^#Sa#z#Sa#|#Sa#}#Sa$O#Sa$P#Sa$Q#Sa$R#Sa$S#Sa$T#Sa$U#Sa$V#Sa$W#Sa$X#Sa$Y#Sa$Z#Sa$[#Sa$]#Sa$^#Sa$_#Sa$`#Sa$a#Sa$b#Sa$c#Sa$d#Sa$e#Sa$f#Sa$g#Sa$h#Sa$i#Sa$j#Sa$k#Sa$l#Sa$m#Sa$n#Sa$o#Sa$p#Sa$q#Sa$r#Sa$s#Sa$t#Sa$u#Sa$v#Sa$w#Sa$x#Sa$y#Sa$z#Sa${#Sa$|#Sa$}#Sa%O#Sa%P#Sa%Q#Sa%R#Sa%S#Sa%T#Sa%U#Sa%V#Sa%W#Sa%X#Sa%Y#Sa%Z#Sa%[#Sa%]#Sa%^#Sa%_#Sa%`#Sa%a#Sa%b#Sa%c#Sa%d#Sa%e#Sa%f#Sa%g#Sa%h#Sa%i#Sa%j#Sa%k#Sa%l#Sa%m#Sa%n#Sa%o#Sa%p#Sa%r#Sa%t#Sa%u#Sa%w#Sa~O%s#Sa~P$+VO!{#Sa!y#Sa~P$+VO#O&SO~O#f&TO#g&VO~P8SO#f&UO#g&WO~P8SOV%aO#VQO#X!qO~OV%sO#VQO#X!qO~OV!sO#VQO#X!qO~O#O'OO~O#O'PO~O#O'QO~O#O'RO~O#`'SO~O#`'TO~O!u'XO!|'{O~O!u'YO!|'|O~O#d'ZO~O#d'[O~O!u']O~O!u'^O~O!u'_O~O!u'`O~O!{'gO~O!{'hO~O!{'kO~O!{'lO~OV'mO~OV'nO~O#c'wO~O#c'xO~O!v(RO~O!v(SO~O}!`V!s#t!P%m!P#u#g#r%l#Y%l~",
  goto: "Kh%rPPPPPP%sP%s&s'V'V'c%s%s%s%s%s't(Q(i(Q't't%s(m)m)m)m)m)m)m)m)m)m)m)m)m)m)m)m)m)m)mPPPP+r-w0W0W0W0W0W0W0W0W0W0W2g0WP0W0W0W0W-w2k2z3Y3`3s3z4QPPPPPPP4WPP6`PPPPPPPPP6n7T7w8hPPPPPP;`PPP%sPPP;fPPPPPPPPPPPPPPPP0W?qAzDcPFxPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPIX!{fO]noqtv!`!q#u$V$[$]$^$_$a$t%y%z%}&X&Y'O'P'Q'R'S'T'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(UQ!vhQ$c#SQ'u'}Q'v(OQ'y(RR'z(Se!kh!l#S#{$p$q'}(O(R(S[!ph#S'}(O(R(SQ#z!lQ$o#{R%d$qe!thp|!u#O#Q's't'}(O{!rhp|!_!h!u!z#O#Q#v$X%x&y&z&{&|&}'s't'}(OTwQx!{eO]noqtv!`!q#u$V$[$]$^$_$a$t%y%z%}&X&Y'O'P'Q'R'S'T'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U%VdORS]noqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!q#u$V$[$]$^$_$a$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U%VcORS]noqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!q#u$V$[$]$^$_$a$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U%k`ORS]^bnoqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!f!q#m#r#u$S$V$[$]$^$_$a$k$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U%k_ORS]^bnoqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!f!q#m#r#u$S$V$[$]$^$_$a$k$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(UT!aY!b[!mh#S'}(O(R(SS#|!m#}R#}!ob!uhp|#O#Q's't'}(OR$T!uQxQR#UxS#w!j!sQ$e#gW$n#w$e%{%|Q%{%aR%|%sS$X!z%xR$w$XQ!bYR#n!bQ#r!fR$h#rQgOQ!d]Q!{nQ!|oQ#PqU#Rt&X&YQ#TvQ#k!`Q$P!qQ$l#uQ$v$VQ$y$[U$z$]'O'PU${$^'Q'RU$|$_'S'TQ%O$aU%u$t'X'YU&P%y'Z'[U&Q%z']'^U&R%}'_'`Q'a'oQ'b'pQ'c'qQ'd'rQ'i'wQ'j'xQ(P(TR(Q(U[!oh#S'}(O(R(SX#y!l#{$p$qW!xh|'}(OQ!}pQ$`#OQ$b#QQ'e'sR'f'td!whp|!u#O#Q's't'}(OU#h!_&y&zQ#t!hU$Y!z$X%xQ$j&{Q%b&|R%t&}l!shp|!u!z#O#Q$X%x&{'s't'}(OS#g!_!hQ$m#vS%a&y&|T%s&z&}%jrORS]^bnoqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!f!q#m#r#u$S$V$[$]$^$_$a$k$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U{!yhp|!_!h!u!z#O#Q#v$X%x&y&z&{&|&}'s't'}(OQ$Z!zR&O%x!STO]noqtv$V$[$]$^$_$a$t%y%z%}'o'p'q'r'w'x(T(UQzRU}S&V&WQ#W!OQ#X!PQ#Y!QQ#Z!RQ#[!SQ#]!TQ#^!UQ#_!VQ#`!WQ#a!XQ#b!YU#c!Z&q&rQ#d![Q#e!]Q#f!^b#j!`&X'O'Q'S'X'Z']'_d$Q!q#u&Y'P'R'T'Y'['^'`Q$f&TQ$s&UQ%R&ZQ%S&]Q%T&_Q%U&aQ%V&cQ%W&eQ%X&gQ%Y&iQ%Z&kQ%[&mQ%]&oQ%^&sQ%_&uQ%`&wQ%e&[Q%f&^Q%g&`Q%h&bQ%i&dQ%j&fQ%k&hQ%l&jQ%m&lQ%n&nQ%o&pQ%p&tQ%q&vR%r&x!vbORS]noqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^$V$[$]$^$_$a$t%y%z%}'o'p'q'r'w'x(T(U!U#m!`&T&V&X&Z&]&_&a&c&e&g&i&k&m&o&q&s&u&w'O'Q'S'X'Z']'_!X$S!q#u&U&W&Y&[&^&`&b&d&f&h&j&l&n&p&r&t&v&x'P'R'T'Y'['^'`%UcORS]noqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!q#u$V$[$]$^$_$a$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(UQ!f^U!ib#m$SS#q!f#rX%c$k'U'V'W!zaORS]bnoqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^$V$[$]$^$_$a$k$t%y%z%}'o'p'q'r'w'x(T(UW!g^!f#r'U!Y#l!`#m&T&V&X&Z&]&_&a&c&e&g&i&k&m&o&q&s&u&w'O'Q'S'V'X'Z']'_!]$R!q#u$S&U&W&Y&[&^&`&b&d&f&h&j&l&n&p&r&t&v&x'P'R'T'W'Y'['^'`%kVORS]^bnoqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!f!q#m#r#u$S$V$[$]$^$_$a$k$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U%kZORS]^bnoqtv!O!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!`!f!q#m#r#u$S$V$[$]$^$_$a$k$t%y%z%}&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'`'o'p'q'r'w'x(T(U",
  nodeNames: "⚠ StringContent IndentedStringContent Comment CommentBlock Expr Lambda Identifier Lambda Formals Formal Formal FormalsRest Lambda Lambda Assert With Let Attr String StringInterpolation AttrInterpolation AttrInherit AttrInheritFrom LetOld If Not Neg Eq NEq LT LE GT GE And Or Imply Update HasAttr Add Sub Mul Div Concat PathLibrary PathAbsolute PathHome PathRelative Call Select Pos Var Primop Int Float TRUE FALSE NULL String IndentedString IndentedStringInterpolation String URI Parens RecSet Set List SelectOr",
  maxTerm: 223,
  skippedNodes: [0,3,4],
  repeatNodeCount: 7,
  tokenData: "@W~R!SX^$_pq$_qr%Srs%ast%ftu%}vw&Ywx&exy&pyz&uz{&z{|'P|}*P}!O*U!O!P*{!P!Q.y!Q![2O![!]3Y!]!^3_!^!_3d!_!`5e!`!a5r!a!b6P!b!c6U!c!}6Z!}#O<`#P#Q<e#R#S;e#T#o6Z#o#p<j#p#q<o#q#r<z#r#s=T#y#z$_$f$g$_$g#BY7X#BY#BZ>b#BZ$IS7X$IS$I_>b$I_$I|7X$I|$JO>b$JO$JT7X$JT$JU>b$JU$KV7X$KV$KW>b$KW&FU7X&FU&FV>b&FV;'S7X;'S;=`7y<%lO7X~$dY!s~X^$_pq$_#y#z$_$f$g$_#BY#BZ$_$IS$I_$_$I|$JO$_$JT$JU$_$KV$KW$_&FU&FV$_o%XP#fP!_!`%[n%aO#in~%fO#V~~%kSR~OY%fZ;'S%f;'S;=`%w<%lO%f~%zP;=`<%l%f~&QP#o#p&T~&YO#X~~&]Pvw&`~&eO#n~~&hPwx&k~&pO%r~~&uO#^~~&zO#_~~'PO#s~~'UW#r~{|'n}!O(]!O!P(]!P!Q(x!Q![(]!c!}(]#R#S(]#T#o(]~'sW#u~{|(]}!O(]!O!P(]!P!Q(x!Q![(]!c!}(]#R#S(]#T#o(]k(`W{|(]}!O(]!O!P(]!P!Q(x!Q![(]!c!}(]#R#S(]#T#o(]k({V{|)b}!O)b!O!P)b!Q![)b!c!})b#R#S)b#T#o)bk)gW!Pk{|)b}!O)b!O!P)b!P!Q(x!Q![)b!c!})b#R#S)b#T#o)b~*UO!y~~*ZX#g~{|(]}!O(]!O!P(]!P!Q(x!Q![(]!`!a*v!c!}(]#R#S(]#T#o(]~*{O#p~~+QW#Yk{|(]}!O(]!O!P+j!P!Q(x!Q![,t!c!}(]#R#S(]#T#o(]o+mW{|(]}!O(]!O!P,V!P!Q(x!Q![(]!c!}(]#R#S(]#T#o(]o,[W!zS{|(]}!O(]!O!P(]!P!Q(x!Q![(]!c!}(]#R#S(]#T#o(]~,y[%m~{|(]}!O(]!O!P(]!P!Q(x!Q![,t!c!g(]!g!h-o!h!}(]#R#S(]#T#X(]#X#Y-o#Y#o(]~-rW{|(]}!O(]!O!P(]!P!Q(x!Q![.[!c!}(]#R#S(]#T#o(]~.aW%m~{|(]}!O(]!O!P(]!P!Q(x!Q![.[!c!}(]#R#S(]#T#o(]~/OX#t~z{/k{|0r}!O0r!O!P0r!P!Q1y!Q![0r!c!}0r#R#S0r#T#o0r~/nTOz/kz{/}{;'S/k;'S;=`0l<%lO/k~0QVOz/kz{/}{!P/k!P!Q0g!Q;'S/k;'S;=`0l<%lO/k~0lOS~~0oP;=`<%l/k~0wW}~{|0r}!O0r!O!P0r!P!Q1a!Q![0r!c!}0r#R#S0r#T#o0r~1dV{|0r}!O0r!O!P0r!Q![0r!c!}0r#R#S0r#T#o0r~2OO#q~~2TW%l~{|(]}!O(]!O!P2m!P!Q(x!Q![2O!c!}(]#R#S(]#T#o(]~2pW{|(]}!O(]!O!P(]!P!Q(x!Q![,t!c!}(]#R#S(]#T#o(]~3_O!u~~3dO#O~~3iW#j~{|4R}!O4R!O!P4R!Q![4R!_!`5`!c!}4R#R#S4R#T#o4R~4UX{|4R}!O4R!O!P4R!P!Q4q!Q![4R!`!a5Z!c!}4R#R#S4R#T#o4R~4tV{|4R}!O4R!O!P4R!Q![4R!c!}4R#R#S4R#T#o4R~5`O|~~5eO#k~o5jP#ZP!_!`5mn5rO#hn~5wP#l~!_!`5z~6PO#m~~6UO!x~~6ZO!|~~6`]V~wx7X{|8P}!O6Z!O!P(]!P!Q(x!Q![6Z![!]8o!c!}6Z#R#S;e#T#o6Z$g;'S7X;'S;=`7y<%lO7X~7^XV~wx7X}!O7X!Q![7X!c!}7X#R#S7X#T#o7X$g;'S7X;'S;=`7y<%lO7X~7|P;=`<%l7X~8SX{|8P}!O8P!O!P(]!P!Q(x!Q![8P![!]8o!c!}8P#R#S(]#T#o8P~8rdqr:Qtu:Quv:Qvw:Qwx:Qz{:Q{|:Q|}:Q}!O:Q!O!P:Q!P!Q:Q!Q![:Q![!]:Q!_!`:Q!a!b:Q!b!c:Q!c!}:Q#R#S:Q#T#o:Q#r#s:Q~:Vd!`~qr:Qtu:Quv:Qvw:Qwx:Qz{:Q{|:Q|}:Q}!O:Q!O!P:Q!P!Q:Q!Q![:Q![!]:Q!_!`:Q!a!b:Q!b!c:Q!c!}:Q#R#S:Q#T#o:Q#r#s:Q~;j[V~wx7X{|(]}!O;e!O!P(]!P!Q(x!Q![;e!c!};e#R#S;e#T#o;e$g;'S7X;'S;=`7y<%lO7X~<eO%u~~<jO%v~~<oO!v~~<rP#p#q<u~<zO#o~o=TO!{e%sW#WQ~=WP!P!Q=Z~=^V{|=s}!O=s!O!P=s!Q![=s!c!}=s#R#S=s#T#o=s~=xW!O~{|=s}!O=s!O!P=s!P!Q=Z!Q![=s!c!}=s#R#S=s#T#o=s~>iiV~!s~X^$_pq$_wx7X}!O7X!Q![7X!c!}7X#R#S7X#T#o7X#y#z$_$f$g$_$g#BY7X#BY#BZ>b#BZ$IS7X$IS$I_>b$I_$I|7X$I|$JO>b$JO$JT7X$JT$JU>b$JU$KV7X$KV$KW>b$KW&FU7X&FU&FV>b&FV;'S7X;'S;=`7y<%lO7X",
  tokenizers: [string, indentedString, 0, 1, 2, 3, 4],
  topRules: {"Expr":[0,5]},
  specialized: [{term: 7, get: (value) => spec_Identifier[value] || -1}],
  tokenPrec: 7354
});

//import * as props from "./props" // FIXME
const props = null;

exports.parser = parser;
exports.props = props;
