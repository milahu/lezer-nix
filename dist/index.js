import { ExternalTokenizer, LRParser } from '@lezer/lr';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const StringContent = 1,
  stringInterpolationStart = 76,
  stringEnd = 77,
  IndentedStringContent = 2,
  indentedStringInterpolationStart = 78,
  indentedStringEnd = 79;

/* Hand-written tokenizers for Nix tokens that can't be
   expressed by lezer's built-in tokenizer. */

const braceL = 123, dollar = 36, backslash = 92,
  doublequote = 34, singlequote = 39, newline = 10;

// based on javascript template parser
// https://github.com/lezer-parser/javascript/blob/main/src/tokens.js
const indentedString = new ExternalTokenizer(input => {
  for (let afterDollar = false, i = 0;; i++) {
    let {next} = input;
    if (next < 0) { // next == -1: end of file
      if (i) {
        input.acceptToken(IndentedStringContent);
      }
      break
    } else if (next == singlequote) {
      if (input.peek(1) == singlequote) {
        if (i == 0) {
          // end of string
          input.advance(2);
          input.acceptToken(indentedStringEnd);
          break
        }
        if (input.peek(2) == dollar && input.peek(3) == braceL) {
          input.advance(2);
        }
        else {
          input.acceptToken(IndentedStringContent);
          // do not advance. '' is needed for indentedStringEnd token
          break
        }
      }
    } else if (next == braceL && afterDollar) {
      if (i == 1) {
        input.acceptToken(indentedStringInterpolationStart, 1);
      }
      else {
        input.acceptToken(IndentedStringContent, -1);
      }
      break
    } else if (next == newline && i > 0) {
      // Break up indentedString strings on lines, to avoid huge tokens
      input.advance(); // add newline to current token
      input.acceptToken(IndentedStringContent);
      break
    }
    afterDollar = next == dollar;
    input.advance();
  }
});

// based on javascript template parser
// https://github.com/lezer-parser/javascript/blob/main/src/tokens.js
const string = new ExternalTokenizer(input => {
  for (let afterDollar = false, i = 0;; i++) {
    let {next} = input;
    if (next < 0) {
      if (i) input.acceptToken(StringContent);
      break
    } else if (next == doublequote) {
      if (i) input.acceptToken(StringContent);
      else input.acceptToken(stringEnd, 1);
      break
    } else if (next == braceL && afterDollar) {
      if (i == 1) input.acceptToken(stringInterpolationStart, 1);
      else input.acceptToken(StringContent, -1);
      break
    } else if (next == newline && i) {
      // Break up template strings on lines, to avoid huge tokens
      input.advance();
      input.acceptToken(StringContent);
      break
    } else if (next == backslash) {
      input.advance();
    }
    afterDollar = next == dollar;
    input.advance();
  }
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_Identifier = {__proto__:null,assert:182, with:186, let:188, inherit:208, in:216, if:220, then:222, else:224, __curPos:268, __typeOf:272, __isFunction:274, __isInt:276, __isFloat:278, __isString:280, __isBool:282, __isPath:284, __genericClosure:286, __addErrorContext:288, __ceil:290, __floor:292, __tryEval:294, __getEnv:296, __seq:298, __deepSeq:300, __trace:302, __toPath:304, __storePath:306, __pathExists:308, __readFile:310, __findFile:312, __hashFile:314, __readDir:316, __toXML:318, __toJSON:320, __fromJSON:322, __toFile:324, __filterSource:326, __path:328, __attrNames:330, __attrValues:332, __getAttr:334, __unsafeGetAttrPos:336, __hasAttr:338, __isAttrs:340, __listToAttrs:342, __intersectAttrs:344, __catAttrs:346, __functionArgs:348, __mapAttrs:350, __zipAttrsWith:352, __isList:354, __elemAt:356, __head:358, __tail:360, __filter:362, __elem:364, __concatLists:366, __length:368, "__foldl'":370, __any:372, __all:374, __genList:376, __sort:378, __partition:380, __groupBy:382, __concatMap:384, __add:386, __sub:388, __mul:390, __div:392, __bitAnd:394, __bitOr:396, __bitXor:398, __lessThan:400, __substring:402, __stringLength:404, __hashString:406, __match:408, __split:410, __concatStringsSep:412, __replaceStrings:414, __parseDrvName:416, __compareVersions:418, __splitVersion:420, __traceVerbose:422, true:428, false:430, null:432, rec:440, or:446};
const parser = LRParser.deserialize({
  version: 14,
  states: "LQQ]QSOOO/UQWO'#D`O/rOPO'#EbO/}QSO'#CtO/}QSO'#CuO7aQWO'#EmOOQO'#FS'#FSOOQO'#Da'#DaOOQO'#Db'#DbOOQO'#Dc'#DcO7wOQO'#G}OOQO'#Dh'#DhOOQO'#Dk'#DkO]QSO'#DmO>[QSO'#DpOOQO'#FV'#FVOOQO'#FU'#FUOEmQWO'#FUOFWQWO'#EqOOQO'#FT'#FTOOQO'#Eq'#EqOOQO'#Em'#EmOOQO'#EQ'#EQQOQSOOOGpQ`O'#DoOOQO'#Dj'#DjOOQO'#D_'#D_OOQO'#FX'#FXOOQO'#Dd'#DdOOQO'#De'#DeOOQO'#Df'#DfO]QSO'#CjO]QSO'#CkOH[QSO'#ClO]QSO'#CsOOQO'#Dg'#DgOHmQSO'#DnO]QSO,58|OHrQSO,59TO]QSO'#CoOOOP'#Dt'#DtOHwOPO,5:|OOQO,5:|,5:|OItQWO,59`OOQO'#D`'#D`OJnQSO'#DoOLQQWO,59aO/}QSO,59bO/}QSO,59cO/}QSO,59dO/}QSO,59eO/}QSO,59fO/}QSO,59gO/}QSO,59hO/}QSO,59iO/}QSO,59jO/}QSO,59kO/}QSO,59mO/}QSO,59nO/}QSO,59oO/}QSO,59pO/}QSO,59qOLkQSO,59lOLvQSO'#DiOOOQ'#Dw'#DwO!%bOQO,5=iOOQO,5=i,5=iO!%mQSO,5:XOOQO,5:[,5:[O!%rQSO,5:[O!,RQSO'#FUOLkQSO,59xOOQO,59w,59wO!,]QSO'#CfOOQO'#ET'#ETO!,nQ`O'#DrO!,vQSO'#CeO!,vQSO'#CeOOQO'#Ce'#CeO!-OQSO'#CpOOQO'#Ea'#EaO!9{QSO'#E`OOQO'#Ds'#DsO!:YQSO'#E_O!:nQSO,59OO!:sQSO'#CmO!:xQSO,5:ZOOQO'#Cn'#CnO!:}QSO'#CqO!;`QSO,59UO!;eQSO,59VO!;jQSO,59WO!;oQSO,59_OJnQSO,5:YOOQO1G.h1G.hO!;tQ`O1G.oO!<SQWO,59ZOOOP-E7r-E7rOOQO1G0h1G0hO!<|QWO1G.|O!=sQWO1G.}O!?XQWO1G/OO!@sQWO1G/PO!B_QWO1G/QO!CyQWO1G/RO!DvQWO1G/SO!EmQWO1G/TO!FdQWO1G/UO!GiQWO1G/VO!IZQWO1G/XOOQO1G/Y1G/YO!J{QWO1G/ZO!LgQWO1G/[O!NRQWO1G/]O!NrQWO'#E`OOQO1G/W1G/WO#!XQpO'#D`O##jQpO'#EmO##qQpO,5:TO##vQpO'#FUO#$QQpO'#EqOOOQ-E7u-E7uOOQO1G3T1G3TOOQO1G/s1G/sOOQO'#Dx'#DxO#%ZQSO1G/vOOQO1G/v1G/vO#,lQWO1G/dO!-OQSO,59RO#-VQSO'#DuO#3sQSO,5:zO#4QQSO'#CfOOQO,5:^,5:^OOQO,59P,59PO#4]Q`O,59POOQO-E7p-E7pO#4eQSO,59PO#4mQ!bO'#D`O#4}QSO,59[O#6WQ`O'#EmO#6bQ!bO'#FUO#6oQ!bO'#EqOOQO-E7q-E7qO#7{QSO1G.jO]QSO,59XOOQO1G/u1G/uO#8TQSO'#EiOOQO'#Dv'#DvO#8cQSO,59]O]QSO,59^O]QSO1G.pO]QSO1G.qO]QSO1G.rO]QSO1G.yO#8hQSO1G/tO#8mQSO7+$ZOOOP1G.u1G.uO#8rQWO,5:zO#:XQpO,59`O#:rQpO,59aOOOQ1G/o1G/oOOQO-E7v-E7vOOQO7+%b7+%bO#AUQSO1G/dO8SQSO7+%cOOQO1G.m1G.mOOQO,5:a,5:aOOQO-E7s-E7sOOQO1G.k1G.kP#A`QSO'#DrO#AeQ`O1G.kOOQO1G.v1G.vO#AmQ`O,59`O#BZQ`O,59aO]QSO7+$UO#BhQSO7+$YO#BmQSO1G.sOOQO-E7t-E7tOOQO1G.w1G.wO#BrQSO1G.xOOQO7+$[7+$[OOQO7+$]7+$]OOQO7+$^7+$^O#BwQSO7+$eOOQO7+%`7+%`O#B|QSO<<GuO#CvQpO1G.|O#D^QpO1G.}O#DtQpO1G/OO#EbQpO1G/PO#FOQpO1G/QO#FlQpO1G/RO#GYQpO1G/SO#GpQpO1G/TO#HWQpO1G/UO#H_QpO1G/VO#H{QpO1G/XO#IcQpO1G/ZO#IsQpO1G/[O#JTQpO1G/]O$#uQpO'#E`O$#|QpO1G/dOOQO<<H}<<H}OOQO7+$V7+$VO$${Q`O1G.|O$%fQ`O1G.}O$&PQ`O1G/OO$&pQ`O1G/PO$'aQ`O1G/QO$(QQ`O1G/RO$(qQ`O1G/SO$)[Q`O1G/TO$)uQ`O1G/UO$*PQ`O1G/VO$*pQ`O1G/XO$+ZQ`O1G/ZO$+nQ`O1G/[O$,RQ`O1G/]O$,fQ!bO'#E`O$,pQ!bO1G/dOOQO<<Gp<<GpO$,}QSO<<GtOOQO7+$_7+$_O$-SQSO7+$dO]QSO<<HPO]QSOAN=aO$4rQpO,5:zO$4yQ!bO,5:zO]QSOAN=`O$5TQSO<<HOOOQOAN=kAN=kOOQOG22{G22{OOQOG22zG22zOOQOAN=jAN=jO$5YQSO'#CtO$5dQSO'#CtO$5YQSO'#CuO$5dQSO'#CuOLvQSO,58|O!-OQSO,58|O$5YQSO,59bO$5dQSO,59bO$5YQSO,59cO$5dQSO,59cO$5YQSO,59dO$5dQSO,59dO$5YQSO,59eO$5dQSO,59eO$5YQSO,59fO$5dQSO,59fO$5YQSO,59gO$5dQSO,59gO$5YQSO,59hO$5dQSO,59hO$5YQSO,59iO$5dQSO,59iO$5YQSO,59jO$5dQSO,59jO$5YQSO,59kO$5dQSO,59kO$5YQSO,59mO$5dQSO,59mO$5YQSO,59nO$5dQSO,59nO$5YQSO,59oO$5dQSO,59oO$5YQSO,59pO$5dQSO,59pO$5YQSO,59qO$5dQSO,59qO$5nQSO,59lO$5yQSO,59lO$6UQSO,59xO$5nQSO,59xO$5yQSO,59xOLvQSO1G.pO!-OQSO1G.pOLvQSO1G.qO!-OQSO1G.qOLvQSO1G.rO!-OQSO1G.rO8SQSO7+%cO8SQSO7+%cO8SQSO7+%cOLvQSO7+$UO!-OQSO7+$UOLvQSO<<HPO!-OQSO<<HPOLvQSOAN=aO!-OQSOAN=aOLvQSOAN=`O!-OQSOAN=`O$6aQSO,59UO$6fQSO,59UO$6kQSO,59VO$6pQSO,59VO$6uQSO,59WO$6zQSO,59WO$7PQSO1G.jO$7XQSO1G.jO$7aQSO7+$eO$7fQSO7+$eO$7kQSO<<GuO$7pQSO<<GuO$7uQSO<<GtO$7zQSO<<GtO]QSO'#CjO]QSO'#CjO]QSO'#CkO]QSO'#CkOH[QSO'#ClOH[QSO'#ClO$8PQSO,59OO$8UQSO,59OO]QSO1G.yO]QSO1G.yO$8ZQSO7+$ZO$8`QSO7+$ZO$8eQSO7+$YO$8jQSO7+$YOGpQ`O'#DoOGpQ`O'#DoO$8oQSO,59_O$8tQSO,59_O!;tQ`O1G.oO!;tQ`O1G.oO]QSO'#CsO]QSO'#CsO$8yQSO,59TO$9OQSO,59T",
  stateData: "$9X~O!sOSROSSOS~OVPO{UO|UO}UO!OUO!`[O!vhO!}oO#PpO#QqO#VQO#^]O#brO#fRO#gSO#zjO#|kO#}kO$OkO$PkO$QkO$RkO$SkO$TkO$UkO$VkO$WkO$XkO$YkO$ZkO$[kO$]kO$^kO$_kO$`kO$akO$bkO$ckO$dkO$ekO$fkO$gkO$hkO$ikO$jkO$kkO$lkO$mkO$nkO$okO$pkO$qkO$rkO$skO$tkO$ukO$vkO$wkO$xkO$ykO$zkO${kO$|kO$}kO%OkO%PkO%QkO%RkO%SkO%TkO%UkO%VkO%WkO%XkO%YkO%ZkO%[kO%]kO%^kO%_kO%`kO%akO%bkO%ckO%dkO%ekO%fkO%gkO%hkO%ikO%jkO%kkO%lWO%mXO%nlO%omO%pnO%rYO%ttO%u^O~OV!SX{!SX|!SX}!SX!O!SX!`!SX!v!SX!x!SX#V!SX#Y!SX#^!SX#g!SX#h!SX#i!SX#j!SX#k!SX#l!SX#m!SX#n!SX#o!SX#p!SX#q!SX#r!SX#s!SX#t!SX#u!SX#z!SX#|!SX#}!SX$O!SX$P!SX$Q!SX$R!SX$S!SX$T!SX$U!SX$V!SX$W!SX$X!SX$Y!SX$Z!SX$[!SX$]!SX$^!SX$_!SX$`!SX$a!SX$b!SX$c!SX$d!SX$e!SX$f!SX$g!SX$h!SX$i!SX$j!SX$k!SX$l!SX$m!SX$n!SX$o!SX$p!SX$q!SX$r!SX$s!SX$t!SX$u!SX$v!SX$w!SX$x!SX$y!SX$z!SX${!SX$|!SX$}!SX%O!SX%P!SX%Q!SX%R!SX%S!SX%T!SX%U!SX%V!SX%W!SX%X!SX%Y!SX%Z!SX%[!SX%]!SX%^!SX%_!SX%`!SX%a!SX%b!SX%c!SX%d!SX%e!SX%f!SX%g!SX%h!SX%i!SX%j!SX%k!SX%l!SX%m!SX%n!SX%o!SX%p!SX%r!SX%t!SX%u!SX~O!uuO!|vO!m!SX#_!SX#O!SX#c!SX#W!SX#d!SX~P'wOPxO!nwO!ozO~OV|O{UO|UO}UO!OUO!`[O!v}O#VQO#^]O#fRO#gSO#zjO#|kO#}kO$OkO$PkO$QkO$RkO$SkO$TkO$UkO$VkO$WkO$XkO$YkO$ZkO$[kO$]kO$^kO$_kO$`kO$akO$bkO$ckO$dkO$ekO$fkO$gkO$hkO$ikO$jkO$kkO$lkO$mkO$nkO$okO$pkO$qkO$rkO$skO$tkO$ukO$vkO$wkO$xkO$ykO$zkO${kO$|kO$}kO%OkO%PkO%QkO%RkO%SkO%TkO%UkO%VkO%WkO%XkO%YkO%ZkO%[kO%]kO%^kO%_kO%`kO%akO%bkO%ckO%dkO%ekO%fkO%gkO%hkO%ikO%jkO%kkO%lWO%mXO%nlO%omO%pnO%rYO%ttO%u^O~O!x!`O#g![O#h!PO#i!QO#j!RO#k!SO#l!TO#m!UO#n!VO#o!WO#p!XO#q!YO#r!ZO#s!]O#t!^O#u!_O~O!m#aX#_#aX#O#aX#c#aX#W#aX#d#aX~P6]OQ!bO!p!aO!q!dO~OV|O{UO|UO}UO!OUO!`[O!v}O#VQO#^]O#zjO#|kO#}kO$OkO$PkO$QkO$RkO$SkO$TkO$UkO$VkO$WkO$XkO$YkO$ZkO$[kO$]kO$^kO$_kO$`kO$akO$bkO$ckO$dkO$ekO$fkO$gkO$hkO$ikO$jkO$kkO$lkO$mkO$nkO$okO$pkO$qkO$rkO$skO$tkO$ukO$vkO$wkO$xkO$ykO$zkO${kO$|kO$}kO%OkO%PkO%QkO%RkO%SkO%TkO%UkO%VkO%WkO%XkO%YkO%ZkO%[kO%]kO%^kO%_kO%`kO%akO%bkO%ckO%dkO%ekO%fkO%gkO%hkO%ikO%jkO%kkO%lWO%mXO%nlO%omO%pnO%rYO%ttO%u^O~O%v!fO~P8SOV#xX{#xX|#xX}#xX!O#xX!`#xX!v#xX!x#xX#V#xX#^#xX#g#xX#h#xX#i#xX#j#xX#k#xX#l#xX#m#xX#n#xX#o#xX#p#xX#q#xX#r#xX#s#xX#t#xX#u#xX#z#xX#|#xX#}#xX$O#xX$P#xX$Q#xX$R#xX$S#xX$T#xX$U#xX$V#xX$W#xX$X#xX$Y#xX$Z#xX$[#xX$]#xX$^#xX$_#xX$`#xX$a#xX$b#xX$c#xX$d#xX$e#xX$f#xX$g#xX$h#xX$i#xX$j#xX$k#xX$l#xX$m#xX$n#xX$o#xX$p#xX$q#xX$r#xX$s#xX$t#xX$u#xX$v#xX$w#xX$x#xX$y#xX$z#xX${#xX$|#xX$}#xX%O#xX%P#xX%Q#xX%R#xX%S#xX%T#xX%U#xX%V#xX%W#xX%X#xX%Y#xX%Z#xX%[#xX%]#xX%^#xX%_#xX%`#xX%a#xX%b#xX%c#xX%d#xX%e#xX%f#xX%g#xX%h#xX%i#xX%j#xX%k#xX%l#xX%m#xX%n#xX%o#xX%p#xX%r#xX%t#xX%u#xX~O#Y!iO!m#xX#_#xX#O#xX#c#xX#W#xX#d#xX~P>cO!m#eX!x#eX#g#eX#h#eX#i#eX#j#eX#k#eX#l#eX#m#eX#n#eX#o#eX#p#eX#q#eX#r#eX#s#eX#t#eX#u#eX#_#eX#O#eX#c#eX#W#eX#d#eX~P8SOV!kO!y!mO!z!pO#VQO#X!qO#[!zO!{XP!{#RP~OV!sO#VQO#X!qO#[!zO#`#RP~O!v#PO~O!v#RO~OPxO!nwO!o#UO~O#hha#iha#jha#kha#lha#mha#nha#oha#pha#qha~O!x!`O#g![O#r!ZO#s!]O#t!^O#u!_O!mha#_ha#Oha#cha#Wha#dha~PISOV!sO#VQO#X!qO#[!zO!{#RP~O!xia#hia#iia#jia#kia#lia#mia#nia#oia#pia#qia#ria#sia#tia#uia~O#g![O!mia#_ia#Oia#cia#Wia#dia~PKPOV#fO#VQO#X!qO~OV#hO{UO|UO}UO!OUO!`[O!v'|O!}'nO#P'pO#Q'rO#VQO#^]O#b(SO#f&SO#g&UO#zjO#|kO#}kO$OkO$PkO$QkO$RkO$SkO$TkO$UkO$VkO$WkO$XkO$YkO$ZkO$[kO$]kO$^kO$_kO$`kO$akO$bkO$ckO$dkO$ekO$fkO$gkO$hkO$ikO$jkO$kkO$lkO$mkO$nkO$okO$pkO$qkO$rkO$skO$tkO$ukO$vkO$wkO$xkO$ykO$zkO${kO$|kO$}kO%OkO%PkO%QkO%RkO%SkO%TkO%UkO%VkO%WkO%XkO%YkO%ZkO%[kO%]kO%^kO%_kO%`kO%akO%bkO%ckO%dkO%ekO%fkO%gkO%hkO%ikO%jkO%kkO%lWO%mXO%nlO%omO%pnO%rYO%ttO%u^O~OQ!bO!p!aO!q#nO~O#_#oO~O%v#rO~P8SOV#xX{#xX|#xX}#xX!O#xX!`#xX!v#xX#V#xX#^#xX#z#xX#|#xX#}#xX$O#xX$P#xX$Q#xX$R#xX$S#xX$T#xX$U#xX$V#xX$W#xX$X#xX$Y#xX$Z#xX$[#xX$]#xX$^#xX$_#xX$`#xX$a#xX$b#xX$c#xX$d#xX$e#xX$f#xX$g#xX$h#xX$i#xX$j#xX$k#xX$l#xX$m#xX$n#xX$o#xX$p#xX$q#xX$r#xX$s#xX$t#xX$u#xX$v#xX$w#xX$x#xX$y#xX$z#xX${#xX$|#xX$}#xX%O#xX%P#xX%Q#xX%R#xX%S#xX%T#xX%U#xX%V#xX%W#xX%X#xX%Y#xX%Z#xX%[#xX%]#xX%^#xX%_#xX%`#xX%a#xX%b#xX%c#xX%d#xX%e#xX%f#xX%g#xX%h#xX%i#xX%j#xX%k#xX%l#xX%m#xX%n#xX%o#xX%p#xX%r#xX%t#xX%u#xX~O#Y&zO%v#xX~P!%yO!x#tO#Y#uO!yYX!{YX#Z#SX~OV#wO!z#yO~O!y#zO!{XX~OV#}O{UO|UO}UO!OUO!`[O!v'}O!}'oO#P'qO#Q'sO#VQO#^]O#b(TO#f&TO#g&VO#zjO#|kO#}kO$OkO$PkO$QkO$RkO$SkO$TkO$UkO$VkO$WkO$XkO$YkO$ZkO$[kO$]kO$^kO$_kO$`kO$akO$bkO$ckO$dkO$ekO$fkO$gkO$hkO$ikO$jkO$kkO$lkO$mkO$nkO$okO$pkO$qkO$rkO$skO$tkO$ukO$vkO$wkO$xkO$ykO$zkO${kO$|kO$}kO%OkO%PkO%QkO%RkO%SkO%TkO%UkO%VkO%WkO%XkO%YkO%ZkO%[kO%]kO%^kO%_kO%`kO%akO%bkO%ckO%dkO%ekO%fkO%gkO%hkO%ikO%jkO%kkO%lWO%mXO%nlO%omO%pnO%rYO%ttO%u^O~O#Y#uOV#SX#O#SX#V#SX{#SX|#SX}#SX!O#SX!`#SX!v#SX#^#SX#z#SX#|#SX#}#SX$O#SX$P#SX$Q#SX$R#SX$S#SX$T#SX$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$]#SX$^#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX$f#SX$g#SX$h#SX$i#SX$j#SX$k#SX$l#SX$m#SX$n#SX$o#SX$p#SX$q#SX$r#SX$s#SX$t#SX$u#SX$v#SX$w#SX$x#SX$y#SX$z#SX${#SX$|#SX$}#SX%O#SX%P#SX%Q#SX%R#SX%S#SX%T#SX%U#SX%V#SX%W#SX%X#SX%Y#SX%Z#SX%[#SX%]#SX%^#SX%_#SX%`#SX%a#SX%b#SX%c#SX%d#SX%e#SX%f#SX%g#SX%h#SX%i#SX%j#SX%k#SX%l#SX%m#SX%n#SX%o#SX%p#SX%r#SX%t#SX%u#SX%w#SX~O#Z#SX#X#SX%v#SX~P!3jOV!sO#VQO#X!qO#[!zO!{#RX#`#RX~O!{$TO~O#Z$UO~O!{$VO~OV!sO#VQO#X!qO#^$ZO#O#]P~O#O$[O~O#O$]O~O#`$^O~O#c$_O~OV#wO!y!mO!z!pO!{XP~O#W$bO~O!x!`O#g![O#j!RO#k!SO#l!TO#m!UO#q!YO#r!ZO#s!]O#t!^O#u!_O~O!mji#hji#iji#nji#oji#pji#_ji#Oji#cji#Wji#dji~P!<XO!mki#hki#iki#nki#oki#pki#_ki#Oki#cki#Wki#dki~P!<XO#hli#ili#jli#kli#lli#mli#nli#oli#pli~O!x!`O#g![O#q!YO#r!ZO#s!]O#t!^O#u!_O!mli#_li#Oli#cli#Wli#dli~P!>jO#hmi#imi#jmi#kmi#lmi#mmi#nmi#omi#pmi~O!x!`O#g![O#q!YO#r!ZO#s!]O#t!^O#u!_O!mmi#_mi#Omi#cmi#Wmi#dmi~P!@UO#hni#ini#jni#kni#lni#mni#nni#oni#pni~O!x!`O#g![O#q!YO#r!ZO#s!]O#t!^O#u!_O!mni#_ni#Oni#cni#Wni#dni~P!ApO#hoi#ioi#joi#koi#loi#moi#noi#ooi#poi~O!x!`O#g![O#q!YO#r!ZO#s!]O#t!^O#u!_O!moi#_oi#Ooi#coi#Woi#doi~P!C[O#h!PO#i!QO!mpi#npi#opi#ppi#_pi#Opi#cpi#Wpi#dpi~P!<XO#h!PO#i!QO#n!VO!mqi#oqi#pqi#_qi#Oqi#cqi#Wqi#dqi~P!<XO!mri#_ri#Ori#cri#Wri#dri~P6]O#hsi#isi#jsi#ksi#lsi#msi#nsi#osi#psi~O!x!`O#g![O#q!YO#r!ZO#s!]O#t!^O#u!_O!msi#_si#Osi#csi#Wsi#dsi~P!FzO#hui#iui#jui#kui#lui#mui#nui#oui#pui#qui#rui~O!x!`O#g![O#s!]O#t!^O#u!_O!mui#_ui#Oui#cui#Wui#dui~P!HfO#hwi#iwi#jwi#kwi#lwi#mwi#nwi#owi#pwi#qwi#rwi#swi#twi~O!x!`O#g![O#u!_O!mwi#_wi#Owi#cwi#Wwi#dwi~P!JQO#hxi#ixi#jxi#kxi#lxi#mxi#nxi#oxi#pxi#qxi#rxi#sxi#txi~O!x!`O#g![O#u!_O!mxi#_xi#Oxi#cxi#Wxi#dxi~P!KlO#hyi#iyi#jyi#kyi#lyi#myi#nyi#oyi#pyi#qyi#ryi#syi#tyi~O!x!`O#g![O#u!_O!myi#_yi#Oyi#cyi#Wyi#dyi~P!MWO!m#SX!x#SX#g#SX#h#SX#i#SX#j#SX#k#SX#l#SX#m#SX#n#SX#o#SX#p#SX#q#SX#r#SX#s#SX#t#SX#u#SX#_#SX#c#SX#W#SX#d#SX~P!3jO!u&WO!|(UO%s!SX~P'wO!x&xO#g&pO#h&YO#i&[O#j&^O#k&`O#l&bO#m&dO#n&fO#o&hO#p&jO#q&lO#r&nO#s&rO#t&tO#u&vO~O%s#aX~P#!fO%s$fO~O#Y&{O%s#xX~P>cO!x#eX#g#eX#h#eX#i#eX#j#eX#k#eX#l#eX#m#eX#n#eX#o#eX#p#eX#q#eX#r#eX#s#eX#t#eX#u#eX%s#eX~P8SO%v$hO~P8SOV!Qi{!Qi|!Qi}!Qi!O!Qi!`!Qi!v!Qi!x!Qi#V!Qi#^!Qi#g!Qi#h!Qi#i!Qi#j!Qi#k!Qi#l!Qi#m!Qi#n!Qi#o!Qi#p!Qi#q!Qi#r!Qi#s!Qi#t!Qi#u!Qi#z!Qi#|!Qi#}!Qi$O!Qi$P!Qi$Q!Qi$R!Qi$S!Qi$T!Qi$U!Qi$V!Qi$W!Qi$X!Qi$Y!Qi$Z!Qi$[!Qi$]!Qi$^!Qi$_!Qi$`!Qi$a!Qi$b!Qi$c!Qi$d!Qi$e!Qi$f!Qi$g!Qi$h!Qi$i!Qi$j!Qi$k!Qi$l!Qi$m!Qi$n!Qi$o!Qi$p!Qi$q!Qi$r!Qi$s!Qi$t!Qi$u!Qi$v!Qi$w!Qi$x!Qi$y!Qi$z!Qi${!Qi$|!Qi$}!Qi%O!Qi%P!Qi%Q!Qi%R!Qi%S!Qi%T!Qi%U!Qi%V!Qi%W!Qi%X!Qi%Y!Qi%Z!Qi%[!Qi%]!Qi%^!Qi%_!Qi%`!Qi%a!Qi%b!Qi%c!Qi%d!Qi%e!Qi%f!Qi%g!Qi%h!Qi%i!Qi%j!Qi%k!Qi%l!Qi%m!Qi%n!Qi%o!Qi%p!Qi%r!Qi%t!Qi%u!Qi~O%w$jO!m!Qi#_!Qi#O!Qi#c!Qi#W!Qi#d!Qi~P#%bOV$lO#VQO#X!qO~O#Y#uOV#Sa#O#Sa#V#Sa{#Sa|#Sa}#Sa!O#Sa!`#Sa!v#Sa#^#Sa#z#Sa#|#Sa#}#Sa$O#Sa$P#Sa$Q#Sa$R#Sa$S#Sa$T#Sa$U#Sa$V#Sa$W#Sa$X#Sa$Y#Sa$Z#Sa$[#Sa$]#Sa$^#Sa$_#Sa$`#Sa$a#Sa$b#Sa$c#Sa$d#Sa$e#Sa$f#Sa$g#Sa$h#Sa$i#Sa$j#Sa$k#Sa$l#Sa$m#Sa$n#Sa$o#Sa$p#Sa$q#Sa$r#Sa$s#Sa$t#Sa$u#Sa$v#Sa$w#Sa$x#Sa$y#Sa$z#Sa${#Sa$|#Sa$}#Sa%O#Sa%P#Sa%Q#Sa%R#Sa%S#Sa%T#Sa%U#Sa%V#Sa%W#Sa%X#Sa%Y#Sa%Z#Sa%[#Sa%]#Sa%^#Sa%_#Sa%`#Sa%a#Sa%b#Sa%c#Sa%d#Sa%e#Sa%f#Sa%g#Sa%h#Sa%i#Sa%j#Sa%k#Sa%l#Sa%m#Sa%n#Sa%o#Sa%p#Sa%r#Sa%t#Sa%u#Sa%w#Sa~O#Z#Sa#X#Sa%v#Sa~P#-bO!x#tO!yYX!{YX~OV#wO!z$nO~O!y$pO!{Xa~O!u&XO!|(VO!{!SX!y!SX~P'wO!{$qO~O!x&yO#g&qO#h&ZO#i&]O#j&_O#k&aO#l&cO#m&eO#n&gO#o&iO#p&kO#q&mO#r&oO#s&sO#t&uO#u&wO~O!{#aX!y#aX~P#5SO#Y&|O!{#xX!y#xX~P>cO!x#eX!{#eX#g#eX#h#eX#i#eX#j#eX#k#eX#l#eX#m#eX#n#eX#o#eX#p#eX#q#eX#r#eX#s#eX#t#eX#u#eX!y#eX~P8SO!u$tO!|$uO~OV!sO#VQO#X!qO#O#]X~O#O$xO~O!{%OO~O!{%PO~O!m#Sa!x#Sa#g#Sa#h#Sa#i#Sa#j#Sa#k#Sa#l#Sa#m#Sa#n#Sa#o#Sa#p#Sa#q#Sa#r#Sa#s#Sa#t#Sa#u#Sa#_#Sa#c#Sa#W#Sa#d#Sa~P#-bO!x&xO#g&pO#r&nO#s&rO#t&tO#u&vO%sha~PISO#g&pO%sia~PKPOV!Qi{!Qi|!Qi}!Qi!O!Qi!`!Qi!v!Qi#V!Qi#^!Qi#z!Qi#|!Qi#}!Qi$O!Qi$P!Qi$Q!Qi$R!Qi$S!Qi$T!Qi$U!Qi$V!Qi$W!Qi$X!Qi$Y!Qi$Z!Qi$[!Qi$]!Qi$^!Qi$_!Qi$`!Qi$a!Qi$b!Qi$c!Qi$d!Qi$e!Qi$f!Qi$g!Qi$h!Qi$i!Qi$j!Qi$k!Qi$l!Qi$m!Qi$n!Qi$o!Qi$p!Qi$q!Qi$r!Qi$s!Qi$t!Qi$u!Qi$v!Qi$w!Qi$x!Qi$y!Qi$z!Qi${!Qi$|!Qi$}!Qi%O!Qi%P!Qi%Q!Qi%R!Qi%S!Qi%T!Qi%U!Qi%V!Qi%W!Qi%X!Qi%Y!Qi%Z!Qi%[!Qi%]!Qi%^!Qi%_!Qi%`!Qi%a!Qi%b!Qi%c!Qi%d!Qi%e!Qi%f!Qi%g!Qi%h!Qi%i!Qi%j!Qi%k!Qi%l!Qi%m!Qi%n!Qi%o!Qi%p!Qi%r!Qi%t!Qi%u!Qi~O%w'TO%v!Qi~P#:|OV#wO~OV#wO!z%cO~O!x&yO#g&qO#r&oO#s&sO#t&uO#u&wO!{ha!yha~PISO#g&qO!{ia!yia~PKPOV%uO~O#O%vO~O#_%wO~O#d%xO~O!u%yO~O!x&xO#g&pO#j&^O#k&`O#l&bO#m&dO#q&lO#r&nO#s&rO#t&tO#u&vO~O#hji#iji#nji#oji#pji%sji~P#CRO#hki#iki#nki#oki#pki%ski~P#CRO!x&xO#g&pO#q&lO#r&nO#s&rO#t&tO#u&vO%sli~P!>jO!x&xO#g&pO#q&lO#r&nO#s&rO#t&tO#u&vO%smi~P!@UO!x&xO#g&pO#q&lO#r&nO#s&rO#t&tO#u&vO%sni~P!ApO!x&xO#g&pO#q&lO#r&nO#s&rO#t&tO#u&vO%soi~P!C[O#h&YO#i&[O#npi#opi#ppi%spi~P#CRO#h&YO#i&[O#n&fO#oqi#pqi%sqi~P#CRO%sri~P#!fO!x&xO#g&pO#q&lO#r&nO#s&rO#t&tO#u&vO%ssi~P!FzO!x&xO#g&pO#s&rO#t&tO#u&vO%sui~P!HfO!x&xO#g&pO#u&vO%swi~P!JQO!x&xO#g&pO#u&vO%sxi~P!KlO!x&xO#g&pO#u&vO%syi~P!MWO#Y#uO!x#SX#g#SX#h#SX#i#SX#j#SX#k#SX#l#SX#m#SX#n#SX#o#SX#p#SX#q#SX#r#SX#s#SX#t#SX#u#SXV#SX{#SX|#SX}#SX!O#SX!`#SX!v#SX#V#SX#^#SX#z#SX#|#SX#}#SX$O#SX$P#SX$Q#SX$R#SX$S#SX$T#SX$U#SX$V#SX$W#SX$X#SX$Y#SX$Z#SX$[#SX$]#SX$^#SX$_#SX$`#SX$a#SX$b#SX$c#SX$d#SX$e#SX$f#SX$g#SX$h#SX$i#SX$j#SX$k#SX$l#SX$m#SX$n#SX$o#SX$p#SX$q#SX$r#SX$s#SX$t#SX$u#SX$v#SX$w#SX$x#SX$y#SX$z#SX${#SX$|#SX$}#SX%O#SX%P#SX%Q#SX%R#SX%S#SX%T#SX%U#SX%V#SX%W#SX%X#SX%Y#SX%Z#SX%[#SX%]#SX%^#SX%_#SX%`#SX%a#SX%b#SX%c#SX%d#SX%e#SX%f#SX%g#SX%h#SX%i#SX%j#SX%k#SX%l#SX%m#SX%n#SX%o#SX%p#SX%r#SX%t#SX%u#SX%w#SX~O%s#SX~P#JeO%w'UO%s!Qi~P#%bO!x&yO#g&qO#j&_O#k&aO#l&cO#m&eO#q&mO#r&oO#s&sO#t&uO#u&wO~O!{ji#hji#iji#nji#oji#pji!yji~P$$WO!{ki#hki#iki#nki#oki#pki!yki~P$$WO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO!{li!yli~P!>jO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO!{mi!ymi~P!@UO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO!{ni!yni~P!ApO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO!{oi!yoi~P!C[O#h&ZO#i&]O!{pi#npi#opi#ppi!ypi~P$$WO#h&ZO#i&]O#n&gO!{qi#oqi#pqi!yqi~P$$WO!{ri!yri~P#5SO!x&yO#g&qO#q&mO#r&oO#s&sO#t&uO#u&wO!{si!ysi~P!FzO!x&yO#g&qO#s&sO#t&uO#u&wO!{ui!yui~P!HfO!x&yO#g&qO#u&wO!{wi!ywi~P!JQO!x&yO#g&qO#u&wO!{xi!yxi~P!KlO!x&yO#g&qO#u&wO!{yi!yyi~P!MWO!{#SX!y#SX~P#JeO%w'VO!{!Qi!y!Qi~P#%bO!u%|O~OV!sO#VQO#X!qO#O#]P~O#Y#uO!x#Sa#g#Sa#h#Sa#i#Sa#j#Sa#k#Sa#l#Sa#m#Sa#n#Sa#o#Sa#p#Sa#q#Sa#r#Sa#s#Sa#t#Sa#u#SaV#Sa{#Sa|#Sa}#Sa!O#Sa!`#Sa!v#Sa#V#Sa#^#Sa#z#Sa#|#Sa#}#Sa$O#Sa$P#Sa$Q#Sa$R#Sa$S#Sa$T#Sa$U#Sa$V#Sa$W#Sa$X#Sa$Y#Sa$Z#Sa$[#Sa$]#Sa$^#Sa$_#Sa$`#Sa$a#Sa$b#Sa$c#Sa$d#Sa$e#Sa$f#Sa$g#Sa$h#Sa$i#Sa$j#Sa$k#Sa$l#Sa$m#Sa$n#Sa$o#Sa$p#Sa$q#Sa$r#Sa$s#Sa$t#Sa$u#Sa$v#Sa$w#Sa$x#Sa$y#Sa$z#Sa${#Sa$|#Sa$}#Sa%O#Sa%P#Sa%Q#Sa%R#Sa%S#Sa%T#Sa%U#Sa%V#Sa%W#Sa%X#Sa%Y#Sa%Z#Sa%[#Sa%]#Sa%^#Sa%_#Sa%`#Sa%a#Sa%b#Sa%c#Sa%d#Sa%e#Sa%f#Sa%g#Sa%h#Sa%i#Sa%j#Sa%k#Sa%l#Sa%m#Sa%n#Sa%o#Sa%p#Sa%r#Sa%t#Sa%u#Sa%w#Sa~O%s#Sa~P$-bO!{#Sa!y#Sa~P$-bO#O&RO~O#f&SO#g&UO~P8SO#f&TO#g&VO~P8SOV%`O#VQO#X!qO~OV%rO#VQO#X!qO~OV!sO#VQO#X!qO~O#O&}O~O#O'OO~O#O'PO~O#O'QO~O#`'RO~O#`'SO~O!u'WO!|'zO~O!u'XO!|'{O~O#d'YO~O#d'ZO~O!u'[O~O!u']O~O!u'^O~O!u'_O~O!{'fO~O!{'gO~O!{'jO~O!{'kO~OV'lO~OV'mO~O#c'vO~O#c'wO~O!v(QO~O!v(RO~O!O!O#Y~",
  goto: "Ma%rPPPPPP%sP%s&s'V'V%s%s%s%s%s'c'n(U'n'c'c(Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)Y)YPPPP+_-d/s/s/s/s/s/s/s/s/s/s2S/s/sP/s/s/s/s-d2W2g2t2z3_3f3lPPPPPPP3rPP5zPPPPPPPPP6Y6l7_7}PPPPPP:tPPP%sPPP:zPPPPPPPPPPPPPPPP?ZAjCsF[PHqPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPKQ!{fO]opruw!a!q#t$U$Z$[$]$^$_$t%x%y%|&W&X&}'O'P'Q'R'S'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(TQ!vhQ$a#RQ't'|Q'u'}Q'x(QR'y(Re!lh!m#R#z$o$p'|'}(Q(Rc!thq}!u#P'r's'|'}y!rhq}!`!i!u!z#P#u$W%w&x&y&z&{&|'r's'|'}TxQy!{eO]opruw!a!q#t$U$Z$[$]$^$_$t%x%y%|&W&X&}'O'P'Q'R'S'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T%VdORS]opruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!q#t$U$Z$[$]$^$_$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T%VcORS]opruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!q#t$U$Z$[$]$^$_$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T%k`ORS]^bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!g!q#l#q#t$R$U$Z$[$]$^$_$j$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T%k_ORS]^bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!g!q#l#q#t$R$U$Z$[$]$^$_$j$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(TT!bY!c[!nh#R'|'}(Q(RS#{!n#|R#|!o`!uhq}#P'r's'|'}R$S!uQyQR#TyS#v!k!sQ$c#fW$m#v$c%z%{Q%z%`R%{%rS$W!z%wR$w$WQ!cYR#m!cQ#q!gR$g#qQgOQ!e]Q!{oQ!|pQ#OrU#Qu&W&XQ#SwQ#j!aQ$O!qQ$k#tQ$v$UQ$y$ZU$z$[&}'OU${$]'P'QU$|$^'R'SQ$}$_U%t$t'W'XU&O%x'Y'ZU&P%y'[']U&Q%|'^'_Q'`'nQ'a'oQ'b'pQ'c'qQ'h'vQ'i'wQ(O(SR(P(T[!oh#R'|'}(Q(RX#x!m#z$o$pW!xh}'|'}Q!}qQ$`#PQ'd'rR'e'sb!whq}!u#P'r's'|'}U#g!`&x&yQ#s!iU$X!z$W%wQ$i&zQ%a&{R%s&|j!shq}!u!z#P$W%w&z'r's'|'}S#f!`!iQ$l#uS%`&x&{T%r&y&|%jsORS]^bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!g!q#l#q#t$R$U$Z$[$]$^$_$j$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(Ty!yhq}!`!i!u!z#P#u$W%w&x&y&z&{&|'r's'|'}Q$Y!zR%}%w!STO]opruw$U$Z$[$]$^$_$t%x%y%|'n'o'p'q'v'w(S(TQ{RQ!OSQ#V!PQ#W!QQ#X!RQ#Y!SQ#Z!TQ#[!UQ#]!VQ#^!WQ#_!XQ#`!YQ#a!ZU#b![&p&qQ#c!]Q#d!^Q#e!_b#i!a&W&}'P'R'W'Y'['^d$P!q#t&X'O'Q'S'X'Z']'_Q$d&SQ$e&UQ$r&TQ$s&VQ%Q&YQ%R&[Q%S&^Q%T&`Q%U&bQ%V&dQ%W&fQ%X&hQ%Y&jQ%Z&lQ%[&nQ%]&rQ%^&tQ%_&vQ%d&ZQ%e&]Q%f&_Q%g&aQ%h&cQ%i&eQ%j&gQ%k&iQ%l&kQ%m&mQ%n&oQ%o&sQ%p&uR%q&w%kiORS]^bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!g!q#l#q#t$R$U$Z$[$]$^$_$j$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T!vbORS]opruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_$U$Z$[$]$^$_$t%x%y%|'n'o'p'q'v'w(S(T!U#l!a&S&U&W&Y&[&^&`&b&d&f&h&j&l&n&p&r&t&v&}'P'R'W'Y'['^!X$R!q#t&T&V&X&Z&]&_&a&c&e&g&i&k&m&o&q&s&u&w'O'Q'S'X'Z']'_%UcORS]opruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!q#t$U$Z$[$]$^$_$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(TQ!g^U!jb#l$RS#p!g#qX%b$j'T'U'V!zaORS]bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_$U$Z$[$]$^$_$j$t%x%y%|'n'o'p'q'v'w(S(TW!h^!g#q'T!Y#k!a#l&S&U&W&Y&[&^&`&b&d&f&h&j&l&n&p&r&t&v&}'P'R'U'W'Y'['^!]$Q!q#t$R&T&V&X&Z&]&_&a&c&e&g&i&k&m&o&q&s&u&w'O'Q'S'V'X'Z']'_%kVORS]^bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!g!q#l#q#t$R$U$Z$[$]$^$_$j$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T%kZORS]^bopruw!P!Q!R!S!T!U!V!W!X!Y!Z![!]!^!_!a!g!q#l#q#t$R$U$Z$[$]$^$_$j$t%x%y%|&S&T&U&V&W&X&Y&Z&[&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&}'O'P'Q'R'S'T'U'V'W'X'Y'Z'[']'^'_'n'o'p'q'v'w(S(T",
  nodeNames: "⚠ StringContent IndentedStringContent Comment CommentBlock Nix Lambda Identifier Lambda Formals Formal Formal Lambda Lambda Assert With Let Attr String StringInterpolation AttrInterpolation AttrInherit AttrInheritFrom If Not Neg Eq NEq LT LE GT GE And Or Imply Update HasAttr Add Sub Mul Div Concat Path PathLibrary PathAbsolute PathHome PathRelative Call Select Pos Var Primop Int Float TRUE FALSE NULL String IndentedString IndentedStringInterpolation Path String URI Parens RecSet Set List SelectOr",
  maxTerm: 223,
  skippedNodes: [0,3,4],
  repeatNodeCount: 7,
  tokenData: ">f~R!QX^$Xpq$Xqr$|rs%Zst%`tu%kvw%vwx&Rxy&^yz&cz{&h{|&m|})m}!O)r!O!P*i!P!Q.g!Q![1Y![!]2d!]!^2i!^!_2n!_!`4o!`!a4|!a!b5Z!b!c5`!c!}5e!}#O:w#P#Q:|#R#S9n#T#o5e#o#p;R#p#q;W#q#r;c#r#s;l#y#z$X$f$g$X$g#BY:`#BY#BZ<y#BZ$IS:`$IS$I_<y$I_$I|:`$I|$JO<y$JO$JT:`$JT$JU<y$JU$KV:`$KV$KW<y$KW&FU:`&FU&FV<y&FV~:`~$^Y!s~X^$Xpq$X#y#z$X$f$g$X#BY#BZ$X$IS$I_$X$I|$JO$X$JT$JU$X$KV$KW$X&FU&FV$Xo%RP#fP!_!`%Un%ZO#in~%`O#V~~%eQR~OY%`Z~%`~%nP#o#p%q~%vO#X~~%yPvw%|~&RO#n~~&UPwx&X~&^O%r~~&cO#^~~&hO#_~~&mO#s~~&rW#r~{|'[}!O'y!O!P'y!P!Q(f!Q!['y!c!}'y#R#S'y#T#o'y~'aW#u~{|'y}!O'y!O!P'y!P!Q(f!Q!['y!c!}'y#R#S'y#T#o'yk'|W{|'y}!O'y!O!P'y!P!Q(f!Q!['y!c!}'y#R#S'y#T#o'yk(iV{|)O}!O)O!O!P)O!Q![)O!c!})O#R#S)O#T#o)Ok)TW!Ok{|)O}!O)O!O!P)O!P!Q(f!Q![)O!c!})O#R#S)O#T#o)O~)rO!y~~)wX#g~{|'y}!O'y!O!P'y!P!Q(f!Q!['y!`!a*d!c!}'y#R#S'y#T#o'y~*iO#p~~*nW#Yk{|'y}!O'y!O!P+W!P!Q(f!Q![,b!c!}'y#R#S'y#T#o'yo+ZW{|'y}!O'y!O!P+s!P!Q(f!Q!['y!c!}'y#R#S'y#T#o'yo+xW!zS{|'y}!O'y!O!P'y!P!Q(f!Q!['y!c!}'y#R#S'y#T#o'y~,g[%m~{|'y}!O'y!O!P'y!P!Q(f!Q![,b!c!g'y!g!h-]!h!}'y#R#S'y#T#X'y#X#Y-]#Y#o'y~-`W{|'y}!O'y!O!P'y!P!Q(f!Q![-x!c!}'y#R#S'y#T#o'y~-}W%m~{|'y}!O'y!O!P'y!P!Q(f!Q![-x!c!}'y#R#S'y#T#o'y~.lX#t~z{/X{|/|}!O/|!O!P/|!P!Q1T!Q![/|!c!}/|#R#S/|#T#o/|~/[ROz/Xz{/e{~/X~/hTOz/Xz{/e{!P/X!P!Q/w!Q~/X~/|OS~~0RW|~{|/|}!O/|!O!P/|!P!Q0k!Q![/|!c!}/|#R#S/|#T#o/|~0nV{|/|}!O/|!O!P/|!Q![/|!c!}/|#R#S/|#T#o/|~1YO#q~~1_W%l~{|'y}!O'y!O!P1w!P!Q(f!Q![1Y!c!}'y#R#S'y#T#o'y~1zW{|'y}!O'y!O!P'y!P!Q(f!Q![,b!c!}'y#R#S'y#T#o'y~2iO!u~~2nO#O~~2sW#j~{|3]}!O3]!O!P3]!Q![3]!_!`4j!c!}3]#R#S3]#T#o3]~3`X{|3]}!O3]!O!P3]!P!Q3{!Q![3]!`!a4e!c!}3]#R#S3]#T#o3]~4OV{|3]}!O3]!O!P3]!Q![3]!c!}3]#R#S3]#T#o3]~4jO{~~4oO#k~o4tP#ZP!_!`4wn4|O#hn~5RP#l~!_!`5U~5ZO#m~~5`O!x~~5eO!|~~5jYV~{|6Y}!O5e!O!P'y!P!Q(f!Q![5e![!]6x!c!}5e#R#S9n#T#o5e$g~:`~6]X{|6Y}!O6Y!O!P'y!P!Q(f!Q![6Y![!]6x!c!}6Y#R#S'y#T#o6Y~6{dqr8Ztu8Zuv8Zvw8Zwx8Zz{8Z{|8Z|}8Z}!O8Z!O!P8Z!P!Q8Z!Q![8Z![!]8Z!_!`8Z!a!b8Z!b!c8Z!c!}8Z#R#S8Z#T#o8Z#r#s8Z~8`d!`~qr8Ztu8Zuv8Zvw8Zwx8Zz{8Z{|8Z|}8Z}!O8Z!O!P8Z!P!Q8Z!Q![8Z![!]8Z!_!`8Z!a!b8Z!b!c8Z!c!}8Z#R#S8Z#T#o8Z#r#s8Z~9sXV~{|'y}!O9n!O!P'y!P!Q(f!Q![9n!c!}9n#R#S9n#T#o9n$g~:`~:eUV~}!O:`!Q![:`!c!}:`#R#S:`#T#o:`$g~:`~:|O%u~~;RO%v~~;WO!v~~;ZP#p#q;^~;cO#o~o;lO!{e%sW#WQ~;oP!P!Q;r~;uV{|<[}!O<[!O!P<[!Q![<[!c!}<[#R#S<[#T#o<[~<aW}~{|<[}!O<[!O!P<[!P!Q;r!Q![<[!c!}<[#R#S<[#T#o<[~=QfV~!s~X^$Xpq$X}!O:`!Q![:`!c!}:`#R#S:`#T#o:`#y#z$X$f$g$X$g#BY:`#BY#BZ<y#BZ$IS:`$IS$I_<y$I_$I|:`$I|$JO<y$JO$JT:`$JT$JU<y$JU$KV:`$KV$KW<y$KW&FU:`&FU&FV<y&FV~:`",
  tokenizers: [string, indentedString, 0, 1, 2, 3, 4],
  topRules: {"Nix":[0,5]},
  specialized: [{term: 7, get: value => spec_Identifier[value] || -1}],
  tokenPrec: 7457
});

//import * as props from "./props" // FIXME
const props = null;

export { parser, props };
