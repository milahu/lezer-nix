@top Nix { expression* }

expression { Mul | Div | Add | Sub | Int | String | List | ConcatList | AttrSet | AttrPath }

@precedence {
  select @left,
  apply @left,
  negate @left,
  hasAttr @left,
  concatList @left,
  times @left,
  plus @left,
  not @left,
  update @left,
  compare @left,
  equal @left,
  and @left,
  or @left,
  imply @left
}

@skip { whitespace | LineComment | BlockComment }

@skip {} {
  String { StringRaw | StringIndent }
  StringRaw { '"' StringRawContent? '"' }
  StringIndent { "''" StringIndentContent? "''" }
}

Mul { expression !times "*" expression }
Div { expression !times "/" expression }

Add { expression (!plus "+" expression)+ }
Sub { expression !plus "-" expression }

List { "[" expression* "]" }

AttrSet { "{" (Attr)* "}" }

Attr { (String | Identifier) "=" expression ";" }

// TODO allow non-strings (symbols) like a.b.c
AttrPath { String ("." String)+ }

ConcatList { List (!concatList "++" List)+ }

Identifier { word }

@tokens {
  Int {
    std.digit+
  }

  StringRawContent { (!["] | "\\" _)+ }

  //StringIndentContent { (![']['] | "\\" _)+ } // error: Unterminated string literal
  // FIXME this is wrong:
  StringIndentContent { (!['] | "\\" _)+ }

  word { identifierChar (identifierChar | std.digit)* }
  identifierChar { std.asciiLetter | $[_$\u{a1}-\u{10ffff}] }

  // fix error: Overlapping tokens word and whitespace
  // TODO why overlapping? word is non-whitespace
  @precedence { word, whitespace }

  whitespace { std.whitespace+ }

  LineComment { "#" ![\n]* }

  BlockComment { "/*" blockCommentRest }
  blockCommentRest { ![*] blockCommentRest | "*" blockCommentAfterStar }
  blockCommentAfterStar { "/" | "*" blockCommentAfterStar | ![/*] blockCommentRest }
}
