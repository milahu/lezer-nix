# int
1
==>
Nix(Int)

# add
1+2
==>
Nix(Add(Int,Int))

# add with whitespace
1 + 2
==>
Nix(Add(Int,Int))

# line comment
# hello
1
==>
Nix(CommentLine,Int)

# line comment precedence
#/*
1
#*/
==>
Nix(CommentLine,Int,CommentLine)

# block comment
/* hello */1
==>
Nix(CommentBlock,Int)

# block comment precedence
/*
# hello
*/
==>
Nix(CommentBlock)

# sub
1-2
==>
Nix(Sub(Int,Int))

# mul
1*2
==>
Nix(Mul(Int,Int))

# div
1/2
==>
Nix(Div(Int,Int))

# precedence mul add
1*2+3
==>
Nix(Add(Mul(Int,Int),Int))

# string line
"a"
==>
Nix(StringLine(StringLineContent))

# string block
''a''
==>
Nix(StringBlock)

# list empty
[]
==>
Nix(List)

# list int
[1]
==>
Nix(List(Int))

# list int string
[1 "a"]
==>
Nix(List(Int,StringLine(StringLineContent)))

# list concat 2
[] ++ []
==>
Nix(ConcatList(List,List))

# list concat 3
[] ++ [] ++ []
==>
Nix(ConcatList(List,List,List))

# string concat 2
"a" + "b"
==>
Nix(Add(StringLine(StringLineContent),StringLine(StringLineContent)))

# string concat 3
"a" + "b" + "c"
==>
Nix(Add(StringLine(StringLineContent),StringLine(StringLineContent),StringLine(StringLineContent)))

# attrset 0
{}
==>
Nix(AttrSet)

# attrset 2
{ "a" = 1; "b" = "2"; }
==>
Nix(AttrSet(Attr(StringLine(StringLineContent),Int),Attr(StringLine(StringLineContent),StringLine(StringLineContent))))

# attrpath string 2
"a"."b"
==>
Nix(AttrPath(StringLine(StringLineContent),StringLine(StringLineContent)))

# attrpath string 3
"a"."b"."c"
==>
Nix(AttrPath(StringLine(StringLineContent),StringLine(StringLineContent),StringLine(StringLineContent)))

# attrpath identifier 3
a.b.c
==>
Nix(AttrPath(Identifier,Identifier,Identifier))

# attrset with identifier
{ a = 1; }
==>
Nix(AttrSet(Attr(Identifier,Int)))

# string block with interpolation
''
  a${x}b
''
==>
Nix(StringBlock(StringBlockContent,StringBlockInterpolation(Identifier),StringBlockContent))
